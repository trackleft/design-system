var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var import_commander=__toESM(require("commander")),import_path16=__toESM(require("path")),import_chalk27=__toESM(require("chalk")),import_envinfo=__toESM(require("envinfo")),import_leven=__toESM(require("leven")),import_read_pkg_up3=require("read-pkg-up"),import_node_logger8=require("@storybook/node-logger");var import_chalk24=__toESM(require("chalk")),import_prompts4=__toESM(require("prompts")),import_telemetry=require("@storybook/telemetry"),import_core_server=require("@storybook/core-server");var import_semver=require("semver");function ltMajor(versionRange,major){return(0,import_semver.validRange)(versionRange)&&(0,import_semver.minVersion)(versionRange).major<major}function gtMajor(versionRange,major){return(0,import_semver.validRange)(versionRange)&&(0,import_semver.minVersion)(versionRange).major>major}function eqMajor(versionRange,major){return(0,import_semver.validRange)(versionRange)&&(0,import_semver.minVersion)(versionRange).major===major}var externalFrameworks=[{name:"qwik",packageName:"storybook-framework-qwik"},{name:"solid",frameworks:["storybook-solidjs-vite"],renderer:"storybook-solidjs"}],SUPPORTED_RENDERERS=["react","react-native","vue","vue3","angular","mithril","riot","ember","marionette","marko","preact","svelte","qwik","rax","aurelia","solid"],ProjectType=(ProjectType2=>(ProjectType2.UNDETECTED="UNDETECTED",ProjectType2.UNSUPPORTED="UNSUPPORTED",ProjectType2.REACT_SCRIPTS="REACT_SCRIPTS",ProjectType2.REACT="REACT",ProjectType2.REACT_NATIVE="REACT_NATIVE",ProjectType2.REACT_PROJECT="REACT_PROJECT",ProjectType2.WEBPACK_REACT="WEBPACK_REACT",ProjectType2.NEXTJS="NEXTJS",ProjectType2.VUE="VUE",ProjectType2.VUE3="VUE3",ProjectType2.SFC_VUE="SFC_VUE",ProjectType2.ANGULAR="ANGULAR",ProjectType2.EMBER="EMBER",ProjectType2.WEB_COMPONENTS="WEB_COMPONENTS",ProjectType2.MITHRIL="MITHRIL",ProjectType2.MARIONETTE="MARIONETTE",ProjectType2.MARKO="MARKO",ProjectType2.HTML="HTML",ProjectType2.QWIK="QWIK",ProjectType2.RIOT="RIOT",ProjectType2.PREACT="PREACT",ProjectType2.SVELTE="SVELTE",ProjectType2.SVELTEKIT="SVELTEKIT",ProjectType2.RAX="RAX",ProjectType2.AURELIA="AURELIA",ProjectType2.SERVER="SERVER",ProjectType2.NX="NX",ProjectType2.SOLID="SOLID",ProjectType2))(ProjectType||{});var supportedTemplates=[{preset:"SFC_VUE",dependencies:{"vue-loader":versionRange=>ltMajor(versionRange,16),vuetify:versionRange=>ltMajor(versionRange,3)},matcherFunction:({dependencies})=>dependencies.some(Boolean)},{preset:"VUE",dependencies:{vue:versionRange=>ltMajor(versionRange,3),nuxt:versionRange=>ltMajor(versionRange,3)},matcherFunction:({dependencies})=>dependencies.some(Boolean)},{preset:"VUE3",dependencies:{vue:versionRange=>versionRange==="next"||eqMajor(versionRange,3)},matcherFunction:({dependencies})=>dependencies.some(Boolean)},{preset:"EMBER",dependencies:["ember-cli"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"NEXTJS",dependencies:{next:versionRange=>eqMajor(versionRange,9)||gtMajor(versionRange,9)},matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"QWIK",dependencies:["@builder.io/qwik"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"REACT_PROJECT",peerDependencies:["react"],matcherFunction:({peerDependencies})=>peerDependencies.every(Boolean)},{preset:"REACT_NATIVE",dependencies:["react-native","react-native-scripts"],matcherFunction:({dependencies})=>dependencies.some(Boolean)},{preset:"REACT_SCRIPTS",files:["/node_modules/.bin/react-scripts"],dependencies:["react-scripts"],matcherFunction:({dependencies,files})=>dependencies.every(Boolean)||files.every(Boolean)},{preset:"ANGULAR",dependencies:["@angular/core"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"WEB_COMPONENTS",dependencies:["lit-element","lit-html","lit"],matcherFunction:({dependencies})=>dependencies.some(Boolean)},{preset:"MITHRIL",dependencies:["mithril"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"MARIONETTE",dependencies:["backbone.marionette"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"MARKO",dependencies:["marko"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"RIOT",dependencies:["riot"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"PREACT",dependencies:["preact"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"SVELTEKIT",dependencies:["@sveltejs/kit"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"SVELTE",dependencies:["svelte"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"RAX",dependencies:["rax"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"AURELIA",dependencies:["aurelia-bootstrapper"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"SOLID",dependencies:["solid-js"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"WEBPACK_REACT",dependencies:["react","webpack"],matcherFunction:({dependencies})=>dependencies.every(Boolean)},{preset:"REACT",dependencies:["react"],matcherFunction:({dependencies})=>dependencies.every(Boolean)}],unsupportedTemplate={preset:"UNSUPPORTED",dependencies:{nuxt:versionRange=>eqMajor(versionRange,3)},matcherFunction:({dependencies})=>dependencies.some(Boolean)},notInstallableProjectTypes=["UNDETECTED","UNSUPPORTED"],installableProjectTypes=Object.values(ProjectType).filter(type=>!notInstallableProjectTypes.includes(type)).map(type=>type.toLowerCase());var import_fs2=__toESM(require("fs")),import_find_up=__toESM(require("find-up")),import_semver3=__toESM(require("semver")),import_node_logger=require("@storybook/node-logger");var import_path2=__toESM(require("path")),import_fs=__toESM(require("fs")),import_fs_extra=__toESM(require("fs-extra")),import_chalk=__toESM(require("chalk")),import_semver2=require("semver"),import_strip_json_comments=__toESM(require("strip-json-comments"));var import_path=require("path");function getCliDir(){return(0,import_path.dirname)(require.resolve("@storybook/cli/package.json"))}function getRendererDir(renderer){let externalFramework=externalFrameworks.find(framework=>framework.name===renderer),frameworkPackageName=(externalFramework==null?void 0:externalFramework.renderer)||(externalFramework==null?void 0:externalFramework.packageName)||`@storybook/${renderer}`;return(0,import_path.dirname)(require.resolve(`${frameworkPackageName}/package.json`,{paths:[process.cwd()]}))}var versions_default={"@storybook/addon-a11y":"7.0.0-beta.47","@storybook/addon-actions":"7.0.0-beta.47","@storybook/addon-backgrounds":"7.0.0-beta.47","@storybook/addon-controls":"7.0.0-beta.47","@storybook/addon-docs":"7.0.0-beta.47","@storybook/addon-essentials":"7.0.0-beta.47","@storybook/addon-highlight":"7.0.0-beta.47","@storybook/addon-interactions":"7.0.0-beta.47","@storybook/addon-jest":"7.0.0-beta.47","@storybook/addon-links":"7.0.0-beta.47","@storybook/addon-measure":"7.0.0-beta.47","@storybook/addon-outline":"7.0.0-beta.47","@storybook/addon-storyshots":"7.0.0-beta.47","@storybook/addon-storyshots-puppeteer":"7.0.0-beta.47","@storybook/addon-storysource":"7.0.0-beta.47","@storybook/addon-toolbars":"7.0.0-beta.47","@storybook/addon-viewport":"7.0.0-beta.47","@storybook/addons":"7.0.0-beta.47","@storybook/angular":"7.0.0-beta.47","@storybook/manager-api":"7.0.0-beta.47","@storybook/blocks":"7.0.0-beta.47","@storybook/builder-manager":"7.0.0-beta.47","@storybook/builder-vite":"7.0.0-beta.47","@storybook/builder-webpack5":"7.0.0-beta.47","@storybook/channel-postmessage":"7.0.0-beta.47","@storybook/channel-websocket":"7.0.0-beta.47","@storybook/channels":"7.0.0-beta.47","@storybook/cli":"7.0.0-beta.47","@storybook/client-api":"7.0.0-beta.47","@storybook/client-logger":"7.0.0-beta.47","@storybook/codemod":"7.0.0-beta.47","@storybook/components":"7.0.0-beta.47","@storybook/core-client":"7.0.0-beta.47","@storybook/core-common":"7.0.0-beta.47","@storybook/core-events":"7.0.0-beta.47","@storybook/core-server":"7.0.0-beta.47","@storybook/core-webpack":"7.0.0-beta.47","@storybook/csf-tools":"7.0.0-beta.47","@storybook/docs-tools":"7.0.0-beta.47","@storybook/ember":"7.0.0-beta.47","@storybook/html":"7.0.0-beta.47","@storybook/html-webpack5":"7.0.0-beta.47","@storybook/html-vite":"7.0.0-beta.47","@storybook/instrumenter":"7.0.0-beta.47","@storybook/nextjs":"7.0.0-beta.47","@storybook/node-logger":"7.0.0-beta.47","@storybook/postinstall":"7.0.0-beta.47","@storybook/preact":"7.0.0-beta.47","@storybook/preact-vite":"7.0.0-beta.47","@storybook/preact-webpack5":"7.0.0-beta.47","@storybook/preset-html-webpack":"7.0.0-beta.47","@storybook/preset-preact-webpack":"7.0.0-beta.47","@storybook/preset-react-webpack":"7.0.0-beta.47","@storybook/preset-server-webpack":"7.0.0-beta.47","@storybook/preset-svelte-webpack":"7.0.0-beta.47","@storybook/preset-vue-webpack":"7.0.0-beta.47","@storybook/preset-vue3-webpack":"7.0.0-beta.47","@storybook/preset-web-components-webpack":"7.0.0-beta.47","@storybook/preview":"7.0.0-beta.47","@storybook/preview-api":"7.0.0-beta.47","@storybook/preview-web":"7.0.0-beta.47","@storybook/react":"7.0.0-beta.47","@storybook/react-vite":"7.0.0-beta.47","@storybook/react-webpack5":"7.0.0-beta.47","@storybook/router":"7.0.0-beta.47","@storybook/server":"7.0.0-beta.47","@storybook/server-webpack5":"7.0.0-beta.47","@storybook/source-loader":"7.0.0-beta.47","@storybook/store":"7.0.0-beta.47","@storybook/svelte":"7.0.0-beta.47","@storybook/sveltekit":"7.0.0-beta.47","@storybook/svelte-vite":"7.0.0-beta.47","@storybook/svelte-webpack5":"7.0.0-beta.47","@storybook/telemetry":"7.0.0-beta.47","@storybook/theming":"7.0.0-beta.47","@storybook/manager":"7.0.0-beta.47","@storybook/vue":"7.0.0-beta.47","@storybook/vue-vite":"7.0.0-beta.47","@storybook/vue-webpack5":"7.0.0-beta.47","@storybook/vue3":"7.0.0-beta.47","@storybook/vue3-vite":"7.0.0-beta.47","@storybook/vue3-webpack5":"7.0.0-beta.47","@storybook/web-components":"7.0.0-beta.47","@storybook/web-components-webpack5":"7.0.0-beta.47","@storybook/web-components-vite":"7.0.0-beta.47",sb:"7.0.0-beta.47",storybook:"7.0.0-beta.47"};var logger=console;function getBowerJson(){let bowerJsonPath=import_path2.default.resolve("bower.json");if(!import_fs.default.existsSync(bowerJsonPath))return!1;let jsonContent=import_fs.default.readFileSync(bowerJsonPath,"utf8");return JSON.parse(jsonContent)}function readFileAsJson(jsonPath,allowComments){let filePath=import_path2.default.resolve(jsonPath);if(!import_fs.default.existsSync(filePath))return!1;let fileContent=import_fs.default.readFileSync(filePath,"utf8"),jsonContent=allowComments?(0,import_strip_json_comments.default)(fileContent):fileContent;try{return JSON.parse(jsonContent)}catch(e){throw logger.error(import_chalk.default.red(`Invalid json in file: ${filePath}`)),e}}var writeFileAsJson=(jsonPath,content)=>{let filePath=import_path2.default.resolve(jsonPath);return import_fs.default.existsSync(filePath)?(import_fs.default.writeFileSync(filePath,`${JSON.stringify(content,null,2)}
`),!0):!1},commandLog=message=>(process.stdout.write(import_chalk.default.cyan(" \u2022 ")+message),(errorMessage,errorInfo)=>{if(errorMessage){if(process.stdout.write(`. ${import_chalk.default.red("\u2716")}
`),logger.error(`
     ${import_chalk.default.red(errorMessage)}`),!errorInfo)return;let newErrorInfo=errorInfo.split(`
`).map(line=>`     ${import_chalk.default.dim(line)}`).join(`
`);logger.error(`${newErrorInfo}
`);return}process.stdout.write(`. ${import_chalk.default.green("\u2713")}
`)});function paddedLog(message){let newMessage=message.split(`
`).map(line=>`    ${line}`).join(`
`);logger.log(newMessage)}function getChars(char,amount){let line="";for(let lc=0;lc<amount;lc+=1)line+=char;return line}function codeLog(codeLines,leftPadAmount){let maxLength=0,finalResult=codeLines.map(line=>(maxLength=line.length>maxLength?line.length:maxLength,line)).map(line=>{let rightPadAmount=maxLength-line.length,newLine=line+getChars(" ",rightPadAmount);return newLine=getChars(" ",leftPadAmount||2)+import_chalk.default.inverse(` ${newLine} `),newLine}).join(`
`);logger.log(finalResult)}async function getBabelDependencies(packageManager,packageJson){let dependenciesToAdd=[],babelLoaderVersion="^8.0.0-0",babelCoreVersion=packageJson.dependencies["babel-core"]||packageJson.devDependencies["babel-core"];if(babelCoreVersion){let latestCompatibleBabelVersion=await packageManager.latestVersion("babel-core",babelCoreVersion);(0,import_semver2.satisfies)(latestCompatibleBabelVersion,"^6.0.0")&&(babelLoaderVersion="^7.0.0")}else if(!packageJson.dependencies["@babel/core"]&&!packageJson.devDependencies["@babel/core"]){let babelCoreInstallVersion=await packageManager.getVersion("@babel/core");dependenciesToAdd.push(`@babel/core@${babelCoreInstallVersion}`)}if(!packageJson.dependencies["babel-loader"]&&!packageJson.devDependencies["babel-loader"]){let babelLoaderInstallVersion=await packageManager.getVersion("babel-loader",babelLoaderVersion);dependenciesToAdd.push(`babel-loader@${babelLoaderInstallVersion}`)}return dependenciesToAdd}function copyTemplate(templateRoot,destination="."){let templateDir=import_path2.default.resolve(templateRoot,"template-csf/");if(!import_fs.default.existsSync(templateDir))throw new Error("Couldn't find template dir");import_fs_extra.default.copySync(templateDir,destination,{overwrite:!0})}async function copyTemplateFiles({renderer,language,destination,includeCommonAssets=!0}){let languageFolderMapping={["javascript"]:"js",["typescript-3-8"]:"ts-3-8",["typescript-4-9"]:"ts-4-9"},templatePath=async()=>{let baseDir=getRendererDir(renderer),assetsDir=(0,import_path2.join)(baseDir,"template/cli"),assetsLanguage=(0,import_path2.join)(assetsDir,languageFolderMapping[language]),assetsJS=(0,import_path2.join)(assetsDir,languageFolderMapping["javascript"]),assetsTS38=(0,import_path2.join)(assetsDir,languageFolderMapping["typescript-3-8"]);if(await import_fs_extra.default.pathExists(assetsLanguage))return assetsLanguage;if(language==="typescript-4-9"&&await import_fs_extra.default.pathExists(assetsTS38))return assetsTS38;if(await import_fs_extra.default.pathExists(assetsJS))return assetsJS;if(await import_fs_extra.default.pathExists(assetsDir))return assetsDir;throw new Error(`Unsupported renderer: ${renderer}`)},destinationPath=destination??await(async()=>await import_fs_extra.default.pathExists("./src")?"./src/stories":"./stories")();includeCommonAssets&&await import_fs_extra.default.copy((0,import_path2.join)(getCliDir(),"rendererAssets/common"),destinationPath,{overwrite:!0}),await import_fs_extra.default.copy(await templatePath(),destinationPath,{overwrite:!0})}function getStorybookVersionSpecifier(packageJson){let allDeps={...packageJson.dependencies,...packageJson.devDependencies},storybookPackage=Object.keys(allDeps).find(name=>versions_default[name]);if(!storybookPackage)throw new Error("Couldn't find any official storybook packages in package.json");return allDeps[storybookPackage]}var regex=/[\s"\n]next.*?(\d+).*/,detectNextJS=packageManager=>{try{let out="";if(packageManager.type==="npm")try{out=packageManager.executeCommand("npm",["ls","next"])}catch{out=packageManager.executeCommand("npm",["why","next"])}else out=packageManager.executeCommand("yarn",["why","next"]);let[,version]=out.match(regex);return version&&parseInt(version,10)?parseInt(version,10):!1}catch{}return!1};var viteConfigFiles=["vite.config.ts","vite.config.js","vite.config.mjs"],hasDependency=(packageJson,name,matcher)=>{var _a,_b;let version=((_a=packageJson.dependencies)==null?void 0:_a[name])||((_b=packageJson.devDependencies)==null?void 0:_b[name]);return version&&typeof matcher=="function"?matcher(version):!!version},hasPeerDependency=(packageJson,name,matcher)=>{var _a;let version=(_a=packageJson.peerDependencies)==null?void 0:_a[name];return version&&typeof matcher=="function"?matcher(version):!!version},getFrameworkPreset=(packageJson,framework)=>{let matcher={dependencies:[!1],peerDependencies:[!1],files:[!1]},{preset,files,dependencies,peerDependencies,matcherFunction}=framework,dependencySearches=[];Array.isArray(dependencies)?dependencySearches=dependencies.map(name=>[name,void 0]):typeof dependencies=="object"&&(dependencySearches=Object.entries(dependencies)),dependencySearches.length>0&&(matcher.dependencies=dependencySearches.map(([name,matchFn])=>hasDependency(packageJson,name,matchFn)));let peerDependencySearches=[];return Array.isArray(peerDependencies)?peerDependencySearches=peerDependencies.map(name=>[name,void 0]):typeof peerDependencies=="object"&&(peerDependencySearches=Object.entries(peerDependencies)),peerDependencySearches.length>0&&(matcher.peerDependencies=peerDependencySearches.map(([name,matchFn])=>hasPeerDependency(packageJson,name,matchFn))),Array.isArray(files)&&files.length>0&&(matcher.files=files.map(name=>import_fs2.default.existsSync(name))),matcherFunction(matcher)?preset:null};function detectFrameworkPreset(packageJson={}){let result=[...supportedTemplates,unsupportedTemplate].find(framework=>getFrameworkPreset(packageJson,framework)!==null);return result?result.preset:"UNDETECTED"}function detectBuilder(packageManager){if(import_find_up.default.sync(viteConfigFiles))return paddedLog("Detected vite project, setting builder to @storybook/builder-vite"),"vite";let nextJSVersion=detectNextJS(packageManager);return nextJSVersion&&nextJSVersion>=11?"webpack5":"webpack5"}function isStorybookInstalled(dependencies,force){return dependencies?!!(!force&&dependencies.devDependencies&&SUPPORTED_RENDERERS.reduce((storybookPresent,framework)=>storybookPresent||!!dependencies.devDependencies[`@storybook/${framework}`],!1)):!1}function detectLanguage(packageJson){let language="javascript";return!packageJson||import_fs2.default.existsSync("jsconfig.json")||(hasDependency(packageJson,"typescript",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"4.9.0"))&&(!hasDependency(packageJson,"prettier")||hasDependency(packageJson,"prettier",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"2.8.0")))&&(!hasDependency(packageJson,"@babel/plugin-transform-typescript")||hasDependency(packageJson,"@babel/plugin-transform-typescript",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"7.20.0")))&&(!hasDependency(packageJson,"@typescript-eslint/parser")||hasDependency(packageJson,"@typescript-eslint/parser",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"5.44.0")))&&(!hasDependency(packageJson,"eslint-plugin-storybook")||hasDependency(packageJson,"eslint-plugin-storybook",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"0.6.8")))?language="typescript-4-9":hasDependency(packageJson,"typescript",version=>import_semver3.default.gte(import_semver3.default.coerce(version),"3.8.0"))?language="typescript-3-8":hasDependency(packageJson,"typescript",version=>import_semver3.default.lt(import_semver3.default.coerce(version),"3.8.0"))&&import_node_logger.logger.warn("Detected TypeScript < 3.8, populating with JavaScript examples")),language}function detect(packageJson,options={}){let bowerJson=getBowerJson();return!packageJson&&!bowerJson?"UNDETECTED":isNxProject(packageJson)?"NX":options.html?"HTML":detectFrameworkPreset(packageJson||bowerJson)}function isNxProject(packageJSON){var _a;return!!((_a=packageJSON.devDependencies)!=null&&_a.nx)||import_fs2.default.existsSync("nx.json")}var import_path6=require("path"),import_semver5=__toESM(require("semver")),import_fs5=__toESM(require("fs")),import_ts_dedent4=__toESM(require("ts-dedent"));var import_path5=__toESM(require("path")),import_fs_extra4=__toESM(require("fs-extra")),import_ts_dedent2=require("ts-dedent");var import_fs_extra2=__toESM(require("fs-extra")),import_ts_dedent=require("ts-dedent");var logger3=console,sanitizeFramework=framework=>{let matches=framework.match(/(@storybook\/\w+(?:-\w+)*)|(storybook-(\w+(?:-\w+)*))/g);if(matches)return matches[0]};async function configureMain({addons,extensions=["js","jsx","ts","tsx"],storybookConfigFolder,language,...custom}){var _a;let prefix=await import_fs_extra2.default.pathExists("./src")?"../src":"../stories",config={stories:[`${prefix}/**/*.mdx`,`${prefix}/**/*.stories.@(${extensions.join("|")})`],addons,...custom},isTypescript=language==="typescript-4-9"||language==="typescript-3-8",mainConfigTemplate=import_ts_dedent.dedent`<<import>>const config<<type>> = <<mainContents>>;
    export default config;`,frameworkPackage=sanitizeFramework((_a=custom.framework)==null?void 0:_a.name);frameworkPackage||(mainConfigTemplate=mainConfigTemplate.replace("<<import>>","").replace("<<type>>",""),logger3.warn("Could not find framework package name"));let mainJsContents=mainConfigTemplate.replace("<<import>>",isTypescript?`import type { StorybookConfig } from '${frameworkPackage}';

`:`/** @type { import('${frameworkPackage}').StorybookConfig } */
`).replace("<<type>>",isTypescript?": StorybookConfig":"").replace("<<mainContents>>",JSON.stringify(config,null,2)).replace(/['"]%%/g,"").replace(/%%['"]/g,"");await import_fs_extra2.default.writeFile(`./${storybookConfigFolder}/main.${isTypescript?"ts":"js"}`,(0,import_ts_dedent.dedent)(mainJsContents),{encoding:"utf8"})}async function configurePreview(options){let{prefix=""}=options.frameworkPreviewParts||{},isTypescript=options.language==="typescript-4-9"||options.language==="typescript-3-8",previewPath=`./${options.storybookConfigFolder}/preview.${isTypescript?"ts":"js"}`;if(await import_fs_extra2.default.pathExists(previewPath))return;let preview=import_ts_dedent.dedent`
    ${prefix}
    export const parameters = {
      backgrounds: {
        default: 'light',
      },
      actions: { argTypesRegex: "^on[A-Z].*" },
      controls: {
        matchers: {
          color: /(background|color)$/i,
          date: /Date$/,
        },
      },
    }`.replace(`  
`,"").trim();await import_fs_extra2.default.writeFile(previewPath,preview,{encoding:"utf8"})}var import_util_deprecate=__toESM(require("util-deprecate")),useNpmWarning=(0,import_util_deprecate.default)(()=>{},"`--use-npm` is deprecated and will be removed in Storybook 8.0. \nPlease use the `--package-manager=npm` option instead.\nRead more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#cli-option---use-npm-deprecated");var import_node_path=__toESM(require("path")),import_cross_spawn2=require("cross-spawn"),import_find_up2=require("find-up");var import_chalk2=__toESM(require("chalk")),import_semver4=require("semver"),import_cross_spawn=require("cross-spawn"),import_path3=__toESM(require("path")),import_fs3=__toESM(require("fs"));var logger4=console;function getPackageDetails(pkg2){let idx=pkg2.lastIndexOf("@");if(idx<=0)return[pkg2,void 0];let packageName=pkg2.slice(0,idx),packageVersion=pkg2.slice(idx+1);return[packageName,packageVersion]}var JsPackageManager=class{setRegistryURL(url){url?this.executeCommand("npm",["config","set","registry",url]):this.executeCommand("npm",["config","delete","registry"])}getRegistryURL(){let url=this.executeCommand("npm",["config","get","registry"]).trim();return url==="undefined"?void 0:url}constructor(options){this.cwd=options==null?void 0:options.cwd}installDependencies(){let done=commandLog("Preparing to install dependencies");done(),logger4.log(),logger4.log(),done=commandLog("Installing dependencies");try{this.runInstall()}catch{done("An error occurred while installing dependencies."),process.exit(1)}done()}packageJsonPath(){return this.cwd?import_path3.default.resolve(this.cwd,"package.json"):import_path3.default.resolve("package.json")}readPackageJson(){let packageJsonPath=this.packageJsonPath();if(!import_fs3.default.existsSync(packageJsonPath))throw new Error(`Could not read package.json file at ${packageJsonPath}`);let jsonContent=import_fs3.default.readFileSync(packageJsonPath,"utf8");return JSON.parse(jsonContent)}writePackageJson(packageJson){let content=`${JSON.stringify(packageJson,null,2)}
`;import_fs3.default.writeFileSync(this.packageJsonPath(),content,"utf8")}retrievePackageJson(){let packageJson;try{packageJson=this.readPackageJson()}catch{this.initPackageJson(),packageJson=this.readPackageJson()}return{...packageJson,dependencies:{...packageJson.dependencies},devDependencies:{...packageJson.devDependencies}}}addDependencies(options,dependencies){let{skipInstall}=options;if(skipInstall){let{packageJson}=options,dependenciesMap=dependencies.reduce((acc,dep)=>{let[packageName,packageVersion]=getPackageDetails(dep);return{...acc,[packageName]:packageVersion}},{});options.installAsDevDependencies?packageJson.devDependencies={...packageJson.devDependencies,...dependenciesMap}:packageJson.dependencies={...packageJson.dependencies,...dependenciesMap},this.writePackageJson(packageJson)}else try{this.runAddDeps(dependencies,options.installAsDevDependencies)}catch(e){logger4.error("An error occurred while installing dependencies."),logger4.log(e.message),process.exit(1)}}removeDependencies(options,dependencies){let{skipInstall}=options;if(skipInstall){let{packageJson}=options;dependencies.forEach(dep=>{packageJson.devDependencies&&delete packageJson.devDependencies[dep],packageJson.dependencies&&delete packageJson.dependencies[dep]}),this.writePackageJson(packageJson)}else try{this.runRemoveDeps(dependencies)}catch(e){logger4.error("An error occurred while removing dependencies."),logger4.log(e.message),process.exit(1)}}getVersionedPackages(packages){return Promise.all(packages.map(async pkg2=>{let[packageName,packageVersion]=getPackageDetails(pkg2);return`${packageName}@${await this.getVersion(packageName,packageVersion)}`}))}getVersions(...packageNames){return Promise.all(packageNames.map(packageName=>this.getVersion(packageName)))}async getVersion(packageName,constraint){let current;/(@storybook|^sb$|^storybook$)/.test(packageName)&&(current=versions_default[packageName]);let latest;try{latest=await this.latestVersion(packageName,constraint)}catch(e){if(current)return logger4.warn(`
     ${import_chalk2.default.yellow(e.message)}`),current;logger4.error(`
     ${import_chalk2.default.red(e.message)}`),process.exit(1)}return`^${current&&(!constraint||(0,import_semver4.satisfies)(current,constraint))&&(0,import_semver4.gt)(current,latest)?current:latest}`}async latestVersion(packageName,constraint){return constraint?(await this.runGetVersions(packageName,!0)).reverse().find(version=>(0,import_semver4.satisfies)(version,constraint)):this.runGetVersions(packageName,!1)}addStorybookCommandInScripts(options){let storybookCmd=`storybook dev -p ${(options==null?void 0:options.port)??6006}`,buildStorybookCmd="storybook build",preCommand=options!=null&&options.preCommand?this.getRunCommand(options.preCommand):void 0;this.addScripts({storybook:[preCommand,storybookCmd].filter(Boolean).join(" && "),"build-storybook":[preCommand,buildStorybookCmd].filter(Boolean).join(" && ")})}addESLintConfig(){var _a;let packageJson=this.retrievePackageJson();this.writePackageJson({...packageJson,eslintConfig:{...packageJson.eslintConfig,overrides:[...((_a=packageJson.eslintConfig)==null?void 0:_a.overrides)||[],{files:["**/*.stories.*"],rules:{"import/no-anonymous-default-export":"off"}}]}})}addScripts(scripts){let packageJson=this.retrievePackageJson();this.writePackageJson({...packageJson,scripts:{...packageJson.scripts,...scripts}})}addPackageResolutions(versions){let packageJson=this.retrievePackageJson(),resolutions=this.getResolutions(packageJson,versions);this.writePackageJson({...packageJson,...resolutions})}executeCommand(command2,args,stdio,cwd){let commandResult=(0,import_cross_spawn.sync)(command2,args,{cwd:cwd??this.cwd,stdio:stdio??"pipe",encoding:"utf-8",shell:!0});if(commandResult.status!==0)throw new Error(commandResult.stderr??"");return commandResult.stdout??""}};var NPMProxy=class extends JsPackageManager{constructor(){super(...arguments);this.type="npm"}initPackageJson(){return this.executeCommand("npm",["init","-y"])}getRunStorybookCommand(){return"npm run storybook"}getRunCommand(command2){return`npm run ${command2}`}getNpmVersion(){return this.executeCommand("npm",["--version"])}getInstallArgs(){return this.installArgs||(this.installArgs=["install"]),this.installArgs}getUninstallArgs(){return this.uninstallArgs||(this.uninstallArgs=["uninstall"]),this.uninstallArgs}runPackageCommand(command2,args,cwd){return this.executeCommand("npm",["exec","--",command2,...args],void 0,cwd)}getResolutions(packageJson,versions){return{overrides:{...packageJson.overrides,...versions}}}runInstall(){this.executeCommand("npm",this.getInstallArgs(),"inherit")}runAddDeps(dependencies,installAsDevDependencies){let args=[...dependencies];installAsDevDependencies&&(args=["-D",...args]),this.executeCommand("npm",[...this.getInstallArgs(),...args],"inherit")}runRemoveDeps(dependencies){let args=[...dependencies];this.executeCommand("npm",[...this.getUninstallArgs(),...args],"inherit")}runGetVersions(packageName,fetchAllVersions){let args=[fetchAllVersions?"versions":"version","--json"],commandResult=this.executeCommand("npm",["info",packageName,...args]);try{let parsedOutput=JSON.parse(commandResult);if(parsedOutput.error)throw new Error(parsedOutput.error.summary);return parsedOutput}catch{throw new Error(`Unable to find versions of ${packageName} using npm`)}}};var PNPMProxy=class extends JsPackageManager{constructor(){super(...arguments);this.type="pnpm"}initPackageJson(){return this.executeCommand("pnpm",["init","-y"])}getRunStorybookCommand(){return"pnpm run storybook"}getRunCommand(command2){return`pnpm run ${command2}`}getPnpmVersion(){return this.executeCommand("pnpm",["--version"])}runPackageCommand(command2,args,cwd){return this.executeCommand("pnpm",["run",command2,...args],void 0,cwd)}getResolutions(packageJson,versions){return{overrides:{...packageJson.overrides,...versions}}}runInstall(){this.executeCommand("pnpm",["install"],"inherit")}runAddDeps(dependencies,installAsDevDependencies){let args=[...dependencies];installAsDevDependencies&&(args=["-D",...args]),this.executeCommand("pnpm",["add",...args],"inherit")}runRemoveDeps(dependencies){let args=[...dependencies];this.executeCommand("pnpm",["remove",...args],"inherit")}runGetVersions(packageName,fetchAllVersions){let args=[fetchAllVersions?"versions":"version","--json"],commandResult=this.executeCommand("pnpm",["info",packageName,...args]);try{let parsedOutput=JSON.parse(commandResult);if(parsedOutput.error)throw new Error(parsedOutput.error.summary);return parsedOutput}catch{throw new Error(`Unable to find versions of ${packageName} using pnpm`)}}};var Yarn2Proxy=class extends JsPackageManager{constructor(){super(...arguments);this.type="yarn2"}initPackageJson(){return this.executeCommand("yarn",["init"])}getRunStorybookCommand(){return"yarn storybook"}getRunCommand(command2){return`yarn ${command2}`}runPackageCommand(command2,args,cwd){return this.executeCommand("yarn",[command2,...args],void 0,cwd)}getResolutions(packageJson,versions){return{resolutions:{...packageJson.resolutions,...versions}}}runInstall(){this.executeCommand("yarn",[],"inherit")}runAddDeps(dependencies,installAsDevDependencies){let args=[...dependencies];installAsDevDependencies&&(args=["-D",...args]),this.executeCommand("yarn",["add",...args],"inherit")}runRemoveDeps(dependencies){let args=[...dependencies];this.executeCommand("yarn",["remove",...args],"inherit")}runGetVersions(packageName,fetchAllVersions){let field=fetchAllVersions?"versions":"version",args=["--fields",field,"--json"],commandResult=this.executeCommand("yarn",["npm","info",packageName,...args]);try{return JSON.parse(commandResult)[field]}catch{throw new Error(`Unable to find versions of ${packageName} using yarn 2`)}}};var Yarn1Proxy=class extends JsPackageManager{constructor(){super(...arguments);this.type="yarn1"}initPackageJson(){return this.executeCommand("yarn",["init","-y"])}getRunStorybookCommand(){return"yarn storybook"}getRunCommand(command2){return`yarn ${command2}`}runPackageCommand(command2,args,cwd){return this.executeCommand("yarn",[command2,...args],void 0,cwd)}getResolutions(packageJson,versions){return{resolutions:{...packageJson.resolutions,...versions}}}runInstall(){this.executeCommand("yarn",[],"inherit")}runAddDeps(dependencies,installAsDevDependencies){let args=["--ignore-workspace-root-check",...dependencies];installAsDevDependencies&&(args=["-D",...args]),this.executeCommand("yarn",["add",...args],"inherit")}runRemoveDeps(dependencies){let args=["--ignore-workspace-root-check",...dependencies];this.executeCommand("yarn",["remove",...args],"inherit")}runGetVersions(packageName,fetchAllVersions){let args=[fetchAllVersions?"versions":"version","--json"],commandResult=this.executeCommand("yarn",["info",packageName,...args]);try{let parsedOutput=JSON.parse(commandResult);if(parsedOutput.type==="inspect")return parsedOutput.data;throw new Error(`Unable to find versions of ${packageName} using yarn`)}catch{throw new Error(`Unable to find versions of ${packageName} using yarn`)}}};var NPM_LOCKFILE="package-lock.json",PNPM_LOCKFILE="pnpm-lock.yaml",YARN_LOCKFILE="yarn.lock",JsPackageManagerFactory=class{static getPackageManager({force}={},cwd){if(force==="npm")return new NPMProxy({cwd});if(force==="pnpm")return new PNPMProxy({cwd});if(force==="yarn1")return new Yarn1Proxy({cwd});if(force==="yarn2")return new Yarn2Proxy({cwd});let yarnVersion=getYarnVersion(cwd),closestLockfilePath=(0,import_find_up2.sync)([YARN_LOCKFILE,PNPM_LOCKFILE,NPM_LOCKFILE],{cwd}),closestLockfile=closestLockfilePath&&import_node_path.default.basename(closestLockfilePath),hasNPMCommand=hasNPM(cwd),hasPNPMCommand=hasPNPM(cwd);if(yarnVersion&&(closestLockfile===YARN_LOCKFILE||!hasNPMCommand&&!hasPNPMCommand))return yarnVersion===1?new Yarn1Proxy({cwd}):new Yarn2Proxy({cwd});if(hasPNPMCommand&&closestLockfile===PNPM_LOCKFILE)return new PNPMProxy({cwd});if(hasNPMCommand)return new NPMProxy({cwd});throw new Error("Unable to find a usable package manager within NPM, PNPM, Yarn and Yarn 2")}};function hasNPM(cwd){return(0,import_cross_spawn2.sync)("npm",["--version"],{cwd,shell:!0}).status===0}function hasPNPM(cwd){return(0,import_cross_spawn2.sync)("pnpm",["--version"],{cwd,shell:!0}).status===0}function getYarnVersion(cwd){let yarnVersionCommand=(0,import_cross_spawn2.sync)("yarn",["--version"],{cwd,shell:!0});if(yarnVersionCommand.status!==0)return;let yarnVersion=yarnVersionCommand.output.toString().replace(/,/g,"").replace(/"/g,"");return/^1\.+/.test(yarnVersion)?1:2}var import_fs_extra3=require("fs-extra"),import_node_logger2=require("@storybook/node-logger"),import_path4=__toESM(require("path")),import_prompts=__toESM(require("prompts")),import_chalk3=__toESM(require("chalk"));var generateStorybookBabelConfigInCWD=async()=>{let target=process.cwd();return generateStorybookBabelConfig({target})},generateStorybookBabelConfig=async({target})=>{import_node_logger2.logger.info(`Generating the storybook default babel config at ${target}`);let fileName=".babelrc.json",location=import_path4.default.join(target,fileName);if(await(0,import_fs_extra3.pathExists)(location)){let{overwrite}=await(0,import_prompts.default)({type:"confirm",initial:!1,name:"overwrite",message:`${fileName} already exists. Would you like overwrite it?`});if(overwrite===!1){import_node_logger2.logger.warn("Cancelled, babel config file was NOT written to file-system.");return}}import_node_logger2.logger.info(`The config will contain ${import_chalk3.default.yellow("@babel/preset-env")} and you will be prompted for additional presets, if you wish to add them depending on your project needs.`);let{typescript,jsx}=await(0,import_prompts.default)([{type:"confirm",initial:!1,name:"typescript",message:"Do you want to add the TypeScript preset?"},{type:"confirm",initial:!1,name:"jsx",message:"Do you want to add the React preset?"}]),added=["@babel/preset-env"],presets=[["@babel/preset-env",{targets:{chrome:100}}]];typescript&&(added.push("@babel/preset-typescript"),presets.push("@babel/preset-typescript")),jsx&&(added.push("@babel/preset-react"),presets.push("@babel/preset-react"));let contents=JSON.stringify({sourceType:"unambiguous",presets,plugins:[]},null,2);import_node_logger2.logger.info(`Writing file to ${location}`),await(0,import_fs_extra3.writeFile)(location,contents);let{runInstall}=await(0,import_prompts.default)({type:"confirm",initial:!0,name:"runInstall",message:`Shall we install the required dependencies now? (${added.join(", ")})`});runInstall&&(import_node_logger2.logger.info("Installing dependencies..."),JsPackageManagerFactory.getPackageManager().addDependencies({installAsDevDependencies:!0},added))};var defaultOptions={extraPackages:[],extraAddons:[],staticDir:void 0,addScripts:!0,addMainFile:!0,addComponents:!0,addBabel:!1,addESLint:!1,extraMain:void 0,framework:void 0,extensions:void 0,componentsDestinationPath:void 0,storybookConfigFolder:".storybook"},getBuilderDetails=builder=>{let map=versions_default;if(map[builder])return builder;let builderPackage=`@storybook/${builder}`;return map[builderPackage]?builderPackage:builder},getExternalFramework=framework=>externalFrameworks.find(exFramework=>{var _a,_b;return framework!==void 0&&(exFramework.name===framework||exFramework.packageName===framework||((_b=(_a=exFramework==null?void 0:exFramework.frameworks)==null?void 0:_a.some)==null?void 0:_b.call(_a,item=>item===framework)))}),getFrameworkPackage=(framework,renderer,builder)=>{let externalFramework=getExternalFramework(framework);return externalFramework===void 0?framework?`@storybook/${framework}`:`@storybook/${renderer}-${builder}`:externalFramework.frameworks!==void 0?externalFramework.frameworks.find(item=>item.match(new RegExp(`-${builder}`))):externalFramework.packageName},getRendererPackage=(framework,renderer)=>{let externalFramework=getExternalFramework(framework);return externalFramework!==void 0?externalFramework.renderer||externalFramework.packageName:`@storybook/${renderer}`},wrapForPnp=packageName=>`%%path.dirname(require.resolve(path.join('${packageName}', 'package.json')))%%`,getFrameworkDetails=(renderer,builder,pnp,framework)=>{let frameworkPackage=getFrameworkPackage(framework,renderer,builder),frameworkPackagePath=pnp?wrapForPnp(frameworkPackage):frameworkPackage,rendererPackage=getRendererPackage(framework,renderer),rendererPackagePath=pnp?wrapForPnp(rendererPackage):rendererPackage,builderPackage=getBuilderDetails(builder),builderPackagePath=pnp?wrapForPnp(builderPackage):builderPackage,isKnownFramework=!!getExternalFramework(frameworkPackage)||!!versions_default[frameworkPackage],isKnownRenderer=!!versions_default[rendererPackage];if(isKnownFramework)return{packages:[rendererPackage,frameworkPackage],framework:frameworkPackagePath,rendererId:renderer,type:"framework"};if(isKnownRenderer)return{packages:[rendererPackage,builderPackage],builder:builderPackagePath,renderer:rendererPackagePath,rendererId:renderer,type:"renderer"};throw new Error(`Could not find the framework (${frameworkPackage}) or renderer (${rendererPackage}) package`)},stripVersions=addons=>addons.map(addon=>getPackageDetails(addon)[0]),hasInteractiveStories=rendererId=>["react","angular","preact","svelte","vue","vue3","html","solid"].includes(rendererId),hasFrameworkTemplates=framework=>["angular","nextjs"].includes(framework);async function baseGenerator(packageManager,npmOptions,{language,builder="webpack5",pnp,frameworkPreviewParts},renderer,options=defaultOptions,framework){let{extraAddons:extraAddonPackages,extraPackages,staticDir,addScripts,addMainFile,addComponents,addBabel,addESLint,extraMain,extensions,storybookConfigFolder,componentsDestinationPath}={...defaultOptions,...options},{packages:frameworkPackages,type,rendererId,framework:frameworkInclude,builder:builderInclude}=getFrameworkDetails(renderer,builder,pnp,framework),addons=["@storybook/addon-links","@storybook/addon-essentials",...stripVersions(extraAddonPackages)],addonPackages=["@storybook/addon-links","@storybook/addon-essentials","@storybook/blocks",...extraAddonPackages];hasInteractiveStories(rendererId)&&(addons.push("@storybook/addon-interactions"),addonPackages.push("@storybook/addon-interactions","@storybook/testing-library@^0.0.14-next.1"));let files=await import_fs_extra4.default.readdir(process.cwd()),packageJson=packageManager.retrievePackageJson(),installedDependencies=new Set(Object.keys({...packageJson.dependencies,...packageJson.devDependencies}));if(installedDependencies.has("react")||addonPackages.push("react"),installedDependencies.has("react-dom")||addonPackages.push("react-dom"),type==="renderer")throw new Error(import_ts_dedent2.dedent`
        Sorry, for now, you can not do this, please use a framework such as @storybook/react-webpack5

        https://github.com/storybookjs/storybook/issues/18360
      `);let packages=["storybook",getExternalFramework(rendererId)?void 0:`@storybook/${rendererId}`,...frameworkPackages,...addonPackages,...extraPackages].filter(Boolean).filter(packageToInstall=>!installedDependencies.has(getPackageDetails(packageToInstall)[0])),versionedPackages=await packageManager.getVersionedPackages(packages);if(await import_fs_extra4.default.ensureDir(`./${storybookConfigFolder}`),addMainFile&&await configureMain({framework:{name:frameworkInclude,options:options.framework||{}},storybookConfigFolder,docs:{autodocs:"tag"},addons:pnp?addons.map(wrapForPnp):addons,extensions,language,...staticDir?{staticDirs:[import_path5.default.join("..",staticDir)]}:null,...extraMain,...type!=="framework"?{core:{builder:builderInclude}}:{}}),await configurePreview({frameworkPreviewParts,storybookConfigFolder,language}),frameworkPackages.find(pkg2=>pkg2.match(/^(@storybook\/|storybook).*-vite$/)||pkg2==="@storybook/sveltekit"||pkg2==="")){let previewHead=import_ts_dedent2.dedent`
      <script>
        window.global = window;
      </script>
    `;await import_fs_extra4.default.writeFile(`${storybookConfigFolder}/preview-head.html`,previewHead,{encoding:"utf8"})}let babelDependencies=addBabel&&builder!=="vite"?await getBabelDependencies(packageManager,packageJson):[];!files.some(fname=>fname.startsWith(".babel")||fname.startsWith("babel")||fname==="package.json")&&await generateStorybookBabelConfigInCWD();let depsToInstall=[...versionedPackages,...babelDependencies];if(depsToInstall.length>0&&packageManager.addDependencies({...npmOptions,packageJson},depsToInstall),addScripts&&packageManager.addStorybookCommandInScripts({port:6006}),addESLint&&packageManager.addESLintConfig(),addComponents){let templateLocation=hasFrameworkTemplates(framework)?framework:rendererId;await copyTemplateFiles({renderer:templateLocation,language,destination:componentsDestinationPath})}}var import_fs4=__toESM(require("fs")),import_prompts2=__toESM(require("prompts")),import_ts_dedent3=__toESM(require("ts-dedent"));var ANGULAR_JSON_PATH="angular.json",compoDocPreviewPrefix=import_ts_dedent3.default`
  import { setCompodocJson } from "@storybook/addon-docs/angular";
  import docJson from "../documentation.json";
  setCompodocJson(docJson);
`.trimStart(),promptForCompoDocs=async()=>{let{useCompoDoc}=await(0,import_prompts2.default)({type:"confirm",name:"useCompoDoc",message:"Do you want to use Compodoc for documentation?"});return useCompoDoc},AngularJSON=class{constructor(){if(!import_fs4.default.existsSync(ANGULAR_JSON_PATH))throw commandLog("An angular.json file was not found in the current directory. Storybook needs it to work properly."),new Error("No angular.json file found");let jsonContent=import_fs4.default.readFileSync(ANGULAR_JSON_PATH,"utf8");this.json=JSON.parse(jsonContent)}get projects(){return this.json.projects}get projectsWithoutStorybook(){return Object.keys(this.projects).filter(projectName=>{let{architect}=this.projects[projectName];return!architect.storybook})}getProjectSettingsByName(projectName){return this.projects[projectName]}async getProjectName(){if(this.projectsWithoutStorybook.length>1){let{projectName}=await(0,import_prompts2.default)({type:"select",name:"projectName",message:"For which project do you want to generate Storybook configuration?",choices:this.projectsWithoutStorybook.map(name=>({title:name,value:name}))});return projectName}return this.projectsWithoutStorybook[0]}addStorybookEntries({angularProjectName,storybookFolder,useCompodoc,root}){let{architect}=this.projects[angularProjectName],baseOptions={configDir:storybookFolder,browserTarget:`${angularProjectName}:build`,compodoc:useCompodoc,...useCompodoc&&{compodocArgs:["-e","json","-d",root||"."]}};architect.storybook||(architect.storybook={builder:"@storybook/angular:start-storybook",options:{...baseOptions,port:6006}}),architect["build-storybook"]||(architect["build-storybook"]={builder:"@storybook/angular:build-storybook",options:{...baseOptions,outputDir:Object.keys(this.projects).length===1?"storybook-static":`dist/storybook/${angularProjectName}`}})}write(){import_fs4.default.writeFileSync(ANGULAR_JSON_PATH,JSON.stringify(this.json,null,2))}};var generator=async(packageManager,npmOptions,options,commandOptions)=>{var _a,_b;let packageJson=packageManager.retrievePackageJson(),angularVersionFromDependencies=(_a=import_semver5.default.coerce(packageManager.retrievePackageJson().dependencies["@angular/core"]))==null?void 0:_a.version,angularVersionFromDevDependencies=(_b=import_semver5.default.coerce(packageManager.retrievePackageJson().devDependencies["@angular/core"]))==null?void 0:_b.version,angularVersion=angularVersionFromDependencies||angularVersionFromDevDependencies,updatedOptions=import_semver5.default.gte(angularVersion,"12.0.0")?{...options,builder:"webpack5"}:options,angularJSON=new AngularJSON;if(angularJSON.projectsWithoutStorybook.length===0)return paddedLog("Every project in your workspace is already set up with Storybook. There is nothing to do!"),Promise.reject();let angularProjectName=await angularJSON.getProjectName();paddedLog(`Adding Storybook support to your "${angularProjectName}" project`);let{root}=angularJSON.getProjectSettingsByName(angularProjectName),{projects}=angularJSON,useCompodoc=commandOptions.yes?!0:await promptForCompoDocs(),storybookFolder=root?`${root}/.storybook`:".storybook";if(root!==""){import_fs5.default.mkdirSync(storybookFolder,{recursive:!0});let rootReferencePathFromStorybookFolder=root.split("/").map(()=>"../").join("");import_fs5.default.writeFileSync(`${storybookFolder}/main.ts`,(0,import_ts_dedent4.default)(`
        import { StorybookConfig } from'@storybook/angular';
        import mainRoot from'${rootReferencePathFromStorybookFolder}../.storybook/main';
        
        const config: StorybookConfig = {
          ...mainRoot
        };
        export default config;
      `))}angularJSON.addStorybookEntries({angularProjectName,storybookFolder,useCompodoc,root}),angularJSON.write();let isSbInstalled=isStorybookInstalled(packageJson,commandOptions.force);await baseGenerator(packageManager,npmOptions,{...updatedOptions,...useCompodoc&&{frameworkPreviewParts:{prefix:compoDocPreviewPrefix}}},"angular",{...useCompodoc&&{extraPackages:["@compodoc/compodoc"]},addScripts:!1,componentsDestinationPath:root?`${root}/src/stories`:void 0,addMainFile:!isSbInstalled,storybookConfigFolder:storybookFolder},"angular"),Object.keys(projects).length===1&&packageManager.addScripts({storybook:`ng run ${angularProjectName}:storybook`,"build-storybook":`ng run ${angularProjectName}:build-storybook`});let templateDir=(0,import_path6.join)(getCliDir(),"templates","angular");return copyTemplate(templateDir,root||void 0),{projectName:angularProjectName}},ANGULAR_default=generator;var import_path7=require("path");function addStorybookExcludeGlobToTsConfig(){let tsConfigJson=readFileAsJson("tsconfig.json",!0),glob="**/*.stories.ts";if(!tsConfigJson)return;let{exclude=[]}=tsConfigJson;exclude.includes(glob)||(tsConfigJson.exclude=[...exclude,glob],writeFileAsJson("tsconfig.json",tsConfigJson))}var generator2=async(packageManager,npmOptions,options)=>{addStorybookExcludeGlobToTsConfig(),await baseGenerator(packageManager,npmOptions,options,"aurelia",{extraPackages:["aurelia"]});let templateDir=(0,import_path7.join)(getCliDir(),"templates","aurelia");copyTemplate(templateDir)},AURELIA_default=generator2;var generator3=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"ember",{extraPackages:["babel-plugin-ember-modules-api-polyfill","babel-plugin-htmlbars-inline-precompile"],staticDir:"dist"})},EMBER_default=generator3;var generator4=async(packageManager,npmOptions,options)=>{let extraPackages=detectLanguage()==="javascript"?["prop-types"]:[];await baseGenerator(packageManager,npmOptions,options,"react",{extraPackages})},REACT_default=generator4;var generator5=async(packageManager,npmOptions)=>{let packageJson=packageManager.retrievePackageJson(),missingReactDom=!packageJson.dependencies["react-dom"]&&!packageJson.devDependencies["react-dom"],reactVersion=packageJson.dependencies.react,packagesToResolve=["react-native-safe-area-context","@react-native-async-storage/async-storage","@react-native-community/datetimepicker","@react-native-community/slider"],packagesWithFixedVersion=["@storybook/addon-actions@^6.5.14","@storybook/addon-controls@^6.5.14","@storybook/addon-ondevice-controls@6.5.0-rc.0","@storybook/addon-ondevice-actions@6.5.0-rc.0","@storybook/react-native@6.5.0-rc.0"],resolvedPackages=await packageManager.getVersionedPackages(packagesToResolve),packages=[...await getBabelDependencies(packageManager,packageJson),...packagesWithFixedVersion,...resolvedPackages,missingReactDom&&reactVersion&&`react-dom@${reactVersion}`].filter(Boolean);packageManager.addDependencies({...npmOptions,packageJson},packages),packageManager.addScripts({"storybook-generate":"sb-rn-get-stories","storybook-watch":"sb-rn-watcher"});let storybookConfigFolder=".storybook";await copyTemplateFiles({renderer:"react-native",language:"javascript",destination:storybookConfigFolder,includeCommonAssets:!1})},REACT_NATIVE_default=generator5;var import_path8=__toESM(require("path")),import_fs6=__toESM(require("fs")),import_semver6=__toESM(require("semver"));var generator6=async(packageManager,npmOptions,options)=>{var _a;let monorepoRootPath=import_path8.default.join(__dirname,"..","..","..","..","..",".."),extraMain=options.linkable?{webpackFinal:`%%(config) => {
      // add monorepo root as a valid directory to import modules from
      config.resolve.plugins.forEach((p) => {
        if (Array.isArray(p.appSrcs)) {
          p.appSrcs.push('${monorepoRootPath}');
              }
            });
          return config;
          }
    %%`}:{},craVersion=(_a=import_semver6.default.coerce(packageManager.retrievePackageJson().dependencies["react-scripts"]))==null?void 0:_a.version,isCra5=craVersion&&import_semver6.default.gte(craVersion,"5.0.0"),updatedOptions=isCra5?{...options,builder:"webpack5"}:options,extraPackages=["@storybook/node-logger"];isCra5&&(extraPackages.push("webpack"),extraPackages.push("babel-plugin-named-exports-order"),extraPackages.push("prop-types")),await baseGenerator(packageManager,npmOptions,updatedOptions,"react",{extraAddons:[`@storybook/preset-create-react-app${isCra5?"":"@3"}`],extraPackages,staticDir:import_fs6.default.existsSync(import_path8.default.resolve("./public"))?"public":void 0,addBabel:!1,addESLint:!0,extraMain})},REACT_SCRIPTS_default=generator6;var generator7=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"react",void 0,"nextjs")},NEXTJS_default=generator7;var generator8=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"vue")},SFC_VUE_default=generator8;var generator9=async(packageManager,npmOptions,options)=>{let extraPackages=options.builder==="webpack5"?["vue-loader@^15.7.0"]:[];await baseGenerator(packageManager,npmOptions,options,"vue",{extraPackages})},VUE_default=generator9;var generator10=async(packageManager,npmOptions,options)=>{let extraPackages=options.builder==="webpack5"?["vue-loader@^17.0.0","@vue/compiler-sfc@^3.2.0"]:[];await baseGenerator(packageManager,npmOptions,options,"vue3",{extraPackages})},VUE3_default=generator10;var generator11=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"react")},WEBPACK_REACT_default=generator11;var generator12=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"mithril")},MITHRIL_default=generator12;var generator13=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"marionette")},MARIONETTE_default=generator13;var generator14=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"marko")},MARKO_default=generator14;var generator15=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"html")},HTML_default=generator15;var generator16=async(packageManager,npmOptions,options)=>baseGenerator(packageManager,npmOptions,options,"web-components",{extraPackages:["lit-html"]}),WEB_COMPONENTS_default=generator16;var generator17=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"riot",{extraPackages:["riot-tag-loader"]})},RIOT_default=generator17;var generator18=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"preact")},PREACT_default=generator18;var generator19=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"svelte",{extensions:["js","jsx","ts","tsx","svelte"]})},SVELTE_default=generator19;var generator20=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"qwik",{},"qwik")},QWIK_default=generator20;var generator21=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"svelte",void 0,"sveltekit")},SVELTEKIT_default=generator21;var generator22=async(packageManager,npmOptions,options)=>{let[latestRaxVersion]=await packageManager.getVersions("rax"),packageJson=packageManager.retrievePackageJson(),raxVersion=packageJson.dependencies.rax||latestRaxVersion;packageJson.dependencies.rax=packageJson.dependencies.rax||raxVersion,packageJson.dependencies["rax-image"]=packageJson.dependencies["rax-image"]||raxVersion,packageJson.dependencies["rax-link"]=packageJson.dependencies["rax-link"]||raxVersion,packageJson.dependencies["rax-text"]=packageJson.dependencies["rax-text"]||raxVersion,packageJson.dependencies["rax-view"]=packageJson.dependencies["rax-view"]||raxVersion,packageManager.writePackageJson(packageJson),await baseGenerator(packageManager,npmOptions,options,"rax",{extraPackages:["rax"]})},RAX_default=generator22;var generator23=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"solid",{},"solid")},SOLID_default=generator23;var import_path9=require("path");var generator24=async(packageManager,npmOptions,options)=>{await baseGenerator(packageManager,npmOptions,options,"server",{extensions:["json"]});let templateDir=(0,import_path9.join)(getCliDir(),"templates","server");copyTemplate(templateDir)},SERVER_default=generator24;var import_prompts3=__toESM(require("prompts")),import_chalk23=__toESM(require("chalk")),import_boxen=__toESM(require("boxen")),import_fs_extra9=require("fs-extra"),import_tempy=__toESM(require("tempy")),import_ts_dedent24=__toESM(require("ts-dedent")),import_path11=require("path");var import_chalk5=__toESM(require("chalk")),import_ts_dedent6=require("ts-dedent"),import_semver8=__toESM(require("semver"));var import_chalk4=__toESM(require("chalk")),import_ts_dedent5=require("ts-dedent"),import_semver7=__toESM(require("semver")),import_csf_tools=require("@storybook/csf-tools"),import_core_common=require("@storybook/core-common"),logger6=console,webpack5={id:"webpack5",async checkWebpack5Builder(packageJson){var _a;let{mainConfig,version:storybookVersion}=(0,import_core_common.getStorybookInfo)(packageJson),storybookCoerced=storybookVersion&&((_a=import_semver7.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent5.dedent`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(import_semver7.default.lt(storybookCoerced,"6.3.0"))return logger6.warn(import_ts_dedent5.dedent`
          Detected SB 6.3 or below, please upgrade storybook to use webpack5.

          To upgrade to the latest stable release, run this from your project directory:

          ${import_chalk4.default.cyan("npx storybook upgrade")}

          Add the ${import_chalk4.default.cyan("--prerelease")} flag to get the latest prerelease.
        `.trim()),null;if(import_semver7.default.gte(storybookCoerced,"7.0.0"))return null;if(!mainConfig)return logger6.warn("Unable to find storybook main.js config"),null;let main=await(0,import_csf_tools.readConfig)(mainConfig),builder=main.getFieldValue(["core","builder"]);return builder&&builder!=="webpack4"?(logger6.info(`Found builder ${builder}, skipping`),null):{storybookVersion,main}},async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{dependencies,devDependencies}=packageJson,webpackVersion=dependencies.webpack||devDependencies.webpack,webpackCoerced=(_a=import_semver7.default.coerce(webpackVersion))==null?void 0:_a.version;if(!webpackCoerced||import_semver7.default.lt(webpackCoerced,"5.0.0")||import_semver7.default.gte(webpackCoerced,"6.0.0"))return null;let builderInfo=await this.checkWebpack5Builder(packageJson);return builderInfo?{webpackVersion,...builderInfo}:null},prompt({webpackVersion}){let webpackFormatted=import_chalk4.default.cyan(`webpack ${webpackVersion}`);return import_ts_dedent5.dedent`
      We've detected you're running ${webpackFormatted}.
      Your Storybook's main.js files specifies webpack4, which is incompatible.
      
      To run Storybook in webpack5-mode, we can install Storybook's ${import_chalk4.default.cyan("@storybook/builder-webpack5")} for you.

      More info: ${import_chalk4.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#webpack-5-manager-build")}
    `},async run({result:{main,storybookVersion,webpackVersion},packageManager,dryRun}){let deps=[`@storybook/builder-webpack5@${storybookVersion}`];webpackVersion||deps.push("webpack@5"),logger6.info(`\u2705 Adding dependencies: ${deps}`),dryRun||packageManager.addDependencies({installAsDevDependencies:!0},deps),logger6.info("\u2705 Setting `core.builder` to `@storybook/builder-webpack5` in main.js"),dryRun||(main.setFieldValue(["core","builder"],"@storybook/builder-webpack5"),await(0,import_csf_tools.writeConfig)(main))}};var cra5={id:"cra5",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{dependencies,devDependencies}=packageJson,craVersion=dependencies["react-scripts"]||devDependencies["react-scripts"],craCoerced=(_a=import_semver8.default.coerce(craVersion))==null?void 0:_a.version;if(!craCoerced||import_semver8.default.lt(craCoerced,"5.0.0"))return null;let builderInfo=await webpack5.checkWebpack5Builder(packageJson);return builderInfo?{craVersion,...builderInfo}:null},prompt({craVersion,...rest}){let craFormatted=import_chalk5.default.cyan(`Create React App (CRA) ${craVersion}`);return console.log({...rest}),import_ts_dedent6.dedent`
      We've detected you are running ${craFormatted} which is powered by webpack5.
      Your Storybook's main.js files specifies webpack4, which is incompatible.

      In order to work with your version of CRA, we need to install Storybook's ${import_chalk5.default.cyan("@storybook/builder-webpack5")}.

      More info: ${import_chalk5.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#cra5-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};var import_chalk6=__toESM(require("chalk")),import_ts_dedent7=require("ts-dedent"),import_semver9=__toESM(require("semver"));var angular12={id:"angular12",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{dependencies,devDependencies}=packageJson,angularVersion=dependencies["@angular/core"]||devDependencies["@angular/core"],angularCoerced=(_a=import_semver9.default.coerce(angularVersion))==null?void 0:_a.version;if(!angularCoerced||import_semver9.default.lt(angularCoerced,"12.0.0"))return null;let builderInfo=await webpack5.checkWebpack5Builder(packageJson);return builderInfo?{angularVersion,...builderInfo}:null},prompt({angularVersion}){let angularFormatted=import_chalk6.default.cyan(`Angular ${angularVersion}`);return import_ts_dedent7.dedent`
      We've detected you are running ${angularFormatted} which is powered by webpack5.
      Your Storybook's main.js files specifies webpack4, which is incompatible.

      In order to work with your version of Angular, we need to install Storybook's ${import_chalk6.default.cyan("@storybook/builder-webpack5")}.

      More info: ${import_chalk6.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#angular12-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};var import_chalk7=__toESM(require("chalk")),import_ts_dedent8=require("ts-dedent"),import_semver10=__toESM(require("semver"));var vue3={id:"vue3",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{dependencies,devDependencies}=packageJson,vueVersion=dependencies.vue||devDependencies.vue,vueCoerced=(_a=import_semver10.default.coerce(vueVersion))==null?void 0:_a.version;if(!vueCoerced||import_semver10.default.lt(vueCoerced,"3.0.0"))return null;let builderInfo=await webpack5.checkWebpack5Builder(packageJson);return builderInfo?{vueVersion,...builderInfo}:null},prompt({vueVersion,storybookVersion}){let vueFormatted=import_chalk7.default.cyan(`Vue ${vueVersion}`),sbFormatted=import_chalk7.default.cyan(`Storybook ${storybookVersion}`);return import_ts_dedent8.dedent`
      We've detected you are running ${vueFormatted} with Storybook.
      ${sbFormatted} runs webpack4 by default, which is incompatible.

      In order to work with your version of Vue, we need to install Storybook's ${import_chalk7.default.cyan("webpack5 builder")}.

      More info: ${import_chalk7.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#vue3-upgrade")}
    `},async run(options){return webpack5.run({...options,result:{webpackVersion:null,...options.result}})}};var import_chalk8=__toESM(require("chalk")),import_ts_dedent9=require("ts-dedent"),import_semver11=__toESM(require("semver")),import_csf_tools2=require("@storybook/csf-tools"),import_core_common2=require("@storybook/core-common"),logger7=console,mainjsFramework={id:"mainjsFramework",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{mainConfig,framework,version:storybookVersion}=(0,import_core_common2.getStorybookInfo)(packageJson);if(!mainConfig)return logger7.warn("Unable to find storybook main.js config, skipping"),null;let storybookCoerced=storybookVersion&&((_a=import_semver11.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent9.dedent`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);let main=await(0,import_csf_tools2.readConfig)(mainConfig),currentFramework=main.getFieldNode(["framework"]),features=main.getFieldValue(["features"]);return currentFramework?null:features!=null&&features.breakingChangesV7||features!=null&&features.storyStoreV7||import_semver11.default.gte(storybookCoerced,"7.0.0")?{main,framework:`@storybook/${framework}`}:null},prompt({framework}){let frameworkFormatted=import_chalk8.default.cyan(`framework: '${framework}'`);return import_ts_dedent9.dedent`
      We've detected that your main.js configuration file does not specify the
      'framework' field, which is a requirement in SB7.0 and above. We can add one
      for you automatically:

      ${frameworkFormatted}

      More info: ${import_chalk8.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field")}
    `},async run({result:{main,framework},dryRun}){logger7.info(`\u2705 Setting 'framework' to '${framework}' in main.js`),dryRun||(main.setFieldValue(["framework"],framework),await(0,import_csf_tools2.writeConfig)(main))}};var import_chalk9=__toESM(require("chalk")),import_ts_dedent10=require("ts-dedent"),import_csf_tools3=require("@storybook/csf-tools"),import_core_common3=require("@storybook/core-common"),import_fs_extra6=require("fs-extra"),import_detect_indent=__toESM(require("detect-indent"));var import_fs_extra5=__toESM(require("fs-extra")),SUPPORTED_ESLINT_EXTENSIONS=["js","cjs","json"],UNSUPPORTED_ESLINT_EXTENSIONS=["yaml","yml"],findEslintFile=()=>{let filePrefix=".eslintrc",unsupportedExtension=UNSUPPORTED_ESLINT_EXTENSIONS.find(ext=>import_fs_extra5.default.existsSync(`${filePrefix}.${ext}`));if(unsupportedExtension)throw new Error(unsupportedExtension);let extension=SUPPORTED_ESLINT_EXTENSIONS.find(ext=>import_fs_extra5.default.existsSync(`${filePrefix}.${ext}`));return extension?`${filePrefix}.${extension}`:null};var logger8=console,eslintPlugin={id:"eslintPlugin",async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),{dependencies,devDependencies}=packageJson,eslintPluginStorybook=dependencies["eslint-plugin-storybook"]||devDependencies["eslint-plugin-storybook"],eslintDependency=dependencies.eslint||devDependencies.eslint;if(eslintPluginStorybook||!eslintDependency)return null;let{mainConfig}=(0,import_core_common3.getStorybookInfo)(packageJson);if(!mainConfig)return logger8.warn("Unable to find storybook main.js config, skipping"),null;let eslintFile,unsupportedExtension;try{eslintFile=findEslintFile()}catch(err){unsupportedExtension=err.message}if(!eslintFile&&!unsupportedExtension)return logger8.warn("Unable to find .eslintrc config file, skipping"),null;let main=await(0,import_csf_tools3.readConfig)(mainConfig);return{eslintFile,main,unsupportedExtension}},prompt(){return import_ts_dedent10.dedent`
      We've detected you are not using our eslint-plugin.

      In order to have the best experience with Storybook and follow best practices, we advise you to install eslint-plugin-storybook.

      More info: ${import_chalk9.default.yellow("https://github.com/storybookjs/eslint-plugin-storybook#readme")}
    `},async run({result:{eslintFile,unsupportedExtension},packageManager,dryRun}){let deps=["eslint-plugin-storybook"];if(logger8.info(`\u2705 Adding dependencies: ${deps}`),dryRun||packageManager.addDependencies({installAsDevDependencies:!0},deps),!dryRun&&unsupportedExtension){logger8.info(import_ts_dedent10.dedent`
          ⚠️ The plugin was successfully installed but failed to configure.
          
          Found an eslint config file with an unsupported automigration format: .eslintrc.${unsupportedExtension}.
          The supported formats for this automigration are: ${SUPPORTED_ESLINT_EXTENSIONS.join(", ")}.

          Please refer to https://github.com/storybookjs/eslint-plugin-storybook#usage to finish setting up the plugin manually.
      `);return}if(logger8.info(`\u2705 Adding Storybook plugin to ${eslintFile}`),!dryRun)if(eslintFile.endsWith("json")){let eslintConfig=await(0,import_fs_extra6.readJson)(eslintFile),existingConfigValue=Array.isArray(eslintConfig.extends)?eslintConfig.extends:[eslintConfig.extends];eslintConfig.extends=[...existingConfigValue||[],"plugin:storybook/recommended"];let eslintFileContents=await(0,import_fs_extra6.readFile)(eslintFile,"utf8"),spaces=(0,import_detect_indent.default)(eslintFileContents).amount||2;await(0,import_fs_extra6.writeJson)(eslintFile,eslintConfig,{spaces})}else{let eslint=await(0,import_csf_tools3.readConfig)(eslintFile),extendsConfig=eslint.getFieldValue(["extends"])||[],existingConfigValue=Array.isArray(extendsConfig)?extendsConfig:[extendsConfig];eslint.setFieldValue(["extends"],[...existingConfigValue,"plugin:storybook/recommended"]),await(0,import_csf_tools3.writeConfig)(eslint)}}};var import_chalk10=__toESM(require("chalk")),import_ts_dedent11=require("ts-dedent"),import_csf_tools4=require("@storybook/csf-tools"),import_core_common4=require("@storybook/core-common"),logger9=console,builderVite={id:"builder-vite",async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),{mainConfig}=(0,import_core_common4.getStorybookInfo)(packageJson);if(!mainConfig)return logger9.warn("Unable to find storybook main.js config"),null;let main=await(0,import_csf_tools4.readConfig)(mainConfig),builder=main.getFieldValue(["core","builder"]);return(typeof builder=="string"?builder:builder==null?void 0:builder.name)!=="storybook-builder-vite"?null:{builder,main,packageJson}},prompt({builder}){let builderFormatted=import_chalk10.default.cyan(JSON.stringify(builder,null,2));return import_ts_dedent11.dedent`
      We've detected you're using the community vite builder: ${builderFormatted}
      
      'storybook-builder-vite' is deprecated and now located at ${import_chalk10.default.cyan("@storybook/builder-vite")}.

      We can upgrade your project to use the new builder automatically.
      
      More info: ${import_chalk10.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#vite-builder-renamed")}
    `},async run({result:{builder,main,packageJson},packageManager,dryRun}){let{dependencies={},devDependencies={}}=packageJson;if(logger9.info("Removing existing 'storybook-builder-vite' dependency"),dryRun||(delete dependencies["storybook-builder-vite"],delete devDependencies["storybook-builder-vite"],packageManager.writePackageJson(packageJson)),logger9.info("Adding '@storybook/builder-vite' as dev dependency"),dryRun||packageManager.addDependencies({installAsDevDependencies:!0},["@storybook/builder-vite"]),logger9.info("Updating main.js to use vite builder"),!dryRun){let updatedBuilder=typeof builder=="string"?"@storybook/builder-vite":{name:"@storybook/builder-vite",options:builder.options};main.setFieldValue(["core","builder"],updatedBuilder),await(0,import_csf_tools4.writeConfig)(main)}}};var import_chalk11=__toESM(require("chalk")),import_ts_dedent12=require("ts-dedent"),import_semver12=__toESM(require("semver")),import_core_common5=require("@storybook/core-common"),logger10=console,getStorybookScripts=allScripts=>Object.keys(allScripts).reduce((acc,key)=>{let isStorybookScript=!1,allWordsFromScript=allScripts[key].split(" "),newScript=allWordsFromScript.map((currentWord,index)=>{let previousWord=allWordsFromScript[index-1],isSbBinary=currentWord==="build-storybook"||currentWord==="start-storybook"||currentWord==="sb",isPrependedByPkgManager=previousWord&&["npx","run","yarn","pnpx"].some(cmd=>previousWord.includes(cmd));return isSbBinary&&!isPrependedByPkgManager?(isStorybookScript=!0,currentWord.replace("sb","storybook").replace("start-storybook","storybook dev").replace("build-storybook","storybook build")):currentWord}).join(" ");return isStorybookScript&&(acc[key]={before:allScripts[key],after:newScript}),acc},{}),sbScripts={id:"sb-scripts",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{scripts={}}=packageJson,{version:storybookVersion}=(0,import_core_common5.getStorybookInfo)(packageJson),storybookCoerced=storybookVersion&&((_a=import_semver12.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent12.dedent`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(import_semver12.default.lt(storybookCoerced,"7.0.0"))return null;let storybookScripts=getStorybookScripts(scripts);return Object.keys(storybookScripts).length===0?null:{packageJson,storybookScripts,storybookVersion}},prompt({storybookVersion,storybookScripts}){let sbFormatted=import_chalk11.default.cyan(`Storybook ${storybookVersion}`),newScriptsMessage=Object.keys(storybookScripts).reduce((acc,scriptKey)=>(acc.push([import_chalk11.default.bold(scriptKey),"from:",import_chalk11.default.cyan(storybookScripts[scriptKey].before),"to:",import_chalk11.default.cyan(storybookScripts[scriptKey].after)].join(`
`)),acc),[]);return import_ts_dedent12.dedent`
      We've detected you are using ${sbFormatted} with scripts from previous versions of Storybook.
      Starting in Storybook 7, the ${import_chalk11.default.yellow("start-storybook")} and ${import_chalk11.default.yellow("build-storybook")} binaries have changed to ${import_chalk11.default.magenta("storybook dev")} and ${import_chalk11.default.magenta("storybook build")} respectively.
      In order to work with ${sbFormatted}, your storybook scripts have to be adjusted to use the binary. We can adjust them for you:

      ${newScriptsMessage.join(`

`)}

      In case this migration did not cover all of your scripts, or you'd like more info: ${import_chalk11.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#start-storybook--build-storybook-binaries-removed")}
      `},async run({result:{storybookScripts},packageManager,dryRun}){if(logger10.info("\u2705 Updating scripts in package.json"),logger10.log(),!dryRun){let newScripts=Object.keys(storybookScripts).reduce((acc,scriptKey)=>(acc[scriptKey]=storybookScripts[scriptKey].after,acc),{});logger10.log(),packageManager.addScripts(newScripts)}}};var import_chalk12=__toESM(require("chalk")),import_ts_dedent13=require("ts-dedent"),import_semver13=__toESM(require("semver")),import_core_common6=require("@storybook/core-common");var logger11=console,sbBinary={id:"storybook-binary",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{devDependencies,dependencies}=packageJson,{version:storybookVersion}=(0,import_core_common6.getStorybookInfo)(packageJson),allDeps={...dependencies,...devDependencies},storybookCoerced=storybookVersion&&((_a=import_semver13.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent13.dedent`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(import_semver13.default.lt(storybookCoerced,"7.0.0"))return null;let hasSbBinary=!!allDeps.sb,hasStorybookBinary=!!allDeps.storybook;return!hasSbBinary&&hasStorybookBinary?null:{hasSbBinary,hasStorybookBinary,storybookVersion,packageJson}},prompt({storybookVersion,hasSbBinary,hasStorybookBinary}){let sbFormatted=import_chalk12.default.cyan(`Storybook ${storybookVersion}`),storybookBinaryMessage=hasStorybookBinary?"":`We've detected you are using ${sbFormatted} without Storybook's ${import_chalk12.default.magenta("storybook")} binary. Starting in Storybook 7.0, it has to be installed.`;return import_ts_dedent13.dedent`
      ${storybookBinaryMessage}
      ${hasSbBinary?`You're using the 'sb' binary and it should be replaced, as 'storybook' is the recommended way to run Storybook.
`:""}

      More info: ${import_chalk12.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#start-storybook--build-storybook-binaries-removed")}
      `},async run({result:{packageJson,hasSbBinary,hasStorybookBinary},packageManager,dryRun}){if(hasSbBinary&&(logger11.info("\u2705 Removing 'sb' dependency"),dryRun||packageManager.removeDependencies({skipInstall:!hasStorybookBinary,packageJson},["sb"])),!hasStorybookBinary&&(logger11.log(),logger11.info("\u2705 Adding 'storybook' as dev dependency"),logger11.log(),!dryRun)){let versionToInstall=getStorybookVersionSpecifier(packageJson);packageManager.addDependencies({installAsDevDependencies:!0},[`storybook@${versionToInstall}`])}}};var import_chalk13=__toESM(require("chalk")),import_ts_dedent14=__toESM(require("ts-dedent")),import_semver14=__toESM(require("semver")),import_csf_tools5=require("@storybook/csf-tools"),import_core_common7=require("@storybook/core-common");var logger12=console,getNextjsAddonOptions=addons=>{let nextjsAddon=addons==null?void 0:addons.find(addon=>typeof addon=="string"?addon==="storybook-addon-next":addon.name==="storybook-addon-next");return!nextjsAddon||typeof nextjsAddon=="string"?{}:nextjsAddon.options||{}},nextjsFramework={id:"nextjsFramework",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),allDeps={...packageJson.dependencies,...packageJson.devDependencies};if(!allDeps.next)return null;let{mainConfig,version:storybookVersion}=(0,import_core_common7.getStorybookInfo)(packageJson);if(!mainConfig)return logger12.warn("Unable to find storybook main.js config, skipping"),null;let storybookCoerced=storybookVersion&&((_a=import_semver14.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent14.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver14.default.gte(storybookCoerced,"7.0.0"))return null;let main=await(0,import_csf_tools5.readConfig)(mainConfig),frameworkPackage=main.getFieldValue(["framework"]);if(!frameworkPackage)return null;let frameworkPackageName=typeof frameworkPackage=="string"?frameworkPackage:frameworkPackage.name;if(frameworkPackageName==="@storybook/react-vite")return logger12.info(import_ts_dedent14.default`
        We've detected you are using Storybook in a Next.js project.

        In Storybook 7, we introduced a new framework package for Next.js projects: @storybook/nextjs.

        This package provides a better experience for Next.js users, however it is only compatible with the webpack 5 builder, so we can't automigrate for you, as you are using the Vite builder.
        
        If you are interested in using this package, see: ${import_chalk13.default.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/nextjs/README.md")}
      `),null;if(frameworkPackageName!=="@storybook/react-webpack5")return null;let addonOptions=getNextjsAddonOptions(main.getFieldValue(["addons"])),frameworkOptions=main.getFieldValue(["framework","options"])||{},addonsToRemove=["storybook-addon-next","storybook-addon-next-router"].filter(dep=>allDeps[dep]);return{main,addonsToRemove,frameworkOptions:{...frameworkOptions,...addonOptions},packageJson}},prompt({addonsToRemove}){let addonsMessage="";return addonsToRemove.length>0&&(addonsMessage=`
      This package also supports features provided by the following packages, which can now be removed:
      ${addonsToRemove.map(dep=>`- ${import_chalk13.default.cyan(dep)}`).join(", ")}
      `),import_ts_dedent14.default`
      We've detected you are using Storybook in a ${import_chalk13.default.bold("Next.js")} project.

      In Storybook 7, we introduced a new framework package for Next.js projects: ${import_chalk13.default.magenta("@storybook/nextjs")}.

      This package is a replacement for ${import_chalk13.default.magenta("@storybook/react-webpack5")} and provides a better experience for Next.js users.
      ${addonsMessage}
      To learn more about it, see: ${import_chalk13.default.yellow("https://github.com/storybookjs/storybook/blob/next/code/frameworks/nextjs/README.md")}
    `},async run({result:{addonsToRemove,main,frameworkOptions,packageJson},packageManager,dryRun}){let dependenciesToRemove=[...addonsToRemove,"@storybook/react-webpack5"];if(dependenciesToRemove.length>0&&(logger12.info(`\u2705 Removing redundant packages: ${dependenciesToRemove.join(", ")}`),!dryRun)){packageManager.removeDependencies({skipInstall:!0,packageJson},dependenciesToRemove);let updatedAddons=main.getFieldValue(["addons"]).filter(addon=>typeof addon=="string"?!addonsToRemove.includes(addon):addon.name?!addonsToRemove.includes(addon.name):!1);main.setFieldValue(["addons"],updatedAddons)}if(logger12.info("\u2705 Installing new dependencies: @storybook/nextjs"),!dryRun){let versionToInstall=getStorybookVersionSpecifier(packageJson);packageManager.addDependencies({installAsDevDependencies:!0,packageJson},[`@storybook/nextjs@${versionToInstall}`])}logger12.info("\u2705 Updating framework field in main.js"),dryRun||(main.setFieldValue(["framework","options"],frameworkOptions),main.setFieldValue(["framework","name"],"@storybook/nextjs"),await(0,import_csf_tools5.writeConfig)(main))}};var import_chalk14=__toESM(require("chalk")),import_ts_dedent15=__toESM(require("ts-dedent")),import_semver15=__toESM(require("semver")),import_csf_tools6=require("@storybook/csf-tools"),import_core_common8=require("@storybook/core-common");var logger13=console,packagesMap={"@storybook/react":{webpack5:"@storybook/react-webpack5",vite:"@storybook/react-vite"},"@storybook/preact":{webpack5:"@storybook/preact-webpack5",vite:"@storybook/preact-vite"},"@storybook/server":{webpack5:"@storybook/server-webpack5"},"@storybook/angular":{webpack5:"@storybook/angular"},"@storybook/vue":{webpack5:"@storybook/vue-webpack5",vite:"@storybook/vue-vite"},"@storybook/vue3":{webpack5:"@storybook/vue3-webpack5",vite:"@storybook/vue3-vite"},"@storybook/svelte":{webpack5:"@storybook/svelte-webpack5",vite:"@storybook/svelte-vite"},"@storybook/web-components":{webpack5:"@storybook/web-components-webpack5",vite:"@storybook/web-components-vite"},"@storybook/html":{webpack5:"@storybook/html-webpack5",vite:"@storybook/html-vite"}},getBuilder=builder=>typeof builder=="string"?builder.includes("vite")?"vite":"webpack5":builder!=null&&builder.name.includes("vite")?"vite":"webpack5",getFrameworkOptions=(framework,main)=>{let frameworkOptions={};try{frameworkOptions=main.getFieldValue([`${framework}Options`])}catch(e){logger13.warn(import_ts_dedent15.default`
      Unable to get the ${framework}Options field.
      
      Please review the changes made to your main.js config and make any necessary changes.
      The ${framework}Options should be moved to the framework.options field.

      The following error occurred when we tried to get the ${framework}Options field:
    `),console.log(e)}return frameworkOptions||{}},newFrameworks={id:"newFrameworks",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),allDeps={...packageJson.dependencies,...packageJson.devDependencies},{mainConfig,version:storybookVersion,framework}=(0,import_core_common8.getStorybookInfo)(packageJson);if(!mainConfig)return logger13.warn("Unable to find storybook main.js config, skipping"),null;let storybookCoerced=storybookVersion&&((_a=import_semver15.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent15.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver15.default.gte(storybookCoerced,"7.0.0"))return null;let main=await(0,import_csf_tools6.readConfig)(mainConfig),frameworkPackage=main.getNameFromPath(["framework"]),builder=main.getFieldValue(["core","builder"]);if(!frameworkPackage||!Object.keys(packagesMap).includes(frameworkPackage))return null;let builderInfo={name:getBuilder(builder),options:main.getFieldValue(["core","builder","options"])||{}},newFrameworkPackage=packagesMap[frameworkPackage][builderInfo.name];if(!newFrameworkPackage)return null;let frameworkOptions=newFrameworkPackage==="@storybook/svelte-vite"?{}:getFrameworkOptions(framework,main),dependenciesToRemove=["@storybook/builder-webpack5","@storybook/manager-webpack5","@storybook/builder-webpack4","@storybook/manager-webpack4","@storybook/builder-vite","storybook-builder-vite"].filter(dep=>allDeps[dep]),dependenciesToAdd=[];if(newFrameworkPackage!==frameworkPackage&&dependenciesToAdd.push(newFrameworkPackage),allDeps.vite&&import_semver15.default.lt(import_semver15.default.coerce(allDeps.vite).version,"3.0.0"))throw new Error(import_ts_dedent15.default`
        ❌ Your project should be upgraded to use the framework package ${import_chalk14.default.bold(newFrameworkPackage)}, but we detected that you are using Vite ${import_chalk14.default.bold(allDeps.vite)}, which is unsupported in ${import_chalk14.default.bold("Storybook 7.0")}. Please upgrade Vite to ${import_chalk14.default.bold("3.0.0 or higher")} and rerun this migration.
      `);return!dependenciesToRemove.length&&!dependenciesToAdd.length?null:{main,dependenciesToAdd,dependenciesToRemove,frameworkPackage:newFrameworkPackage,frameworkOptions,builderInfo,packageJson}},prompt({frameworkPackage,dependenciesToRemove}){return import_ts_dedent15.default`
      We've detected you are using an older format of Storybook frameworks and builders.

      In Storybook 7, frameworks also specify the builder to be used.

      We can remove the dependencies that are no longer needed: ${import_chalk14.default.yellow(dependenciesToRemove.join(", "))}
      
      And set up the ${import_chalk14.default.magenta(frameworkPackage)} framework that already includes the builder.

      To learn more about the framework field, see: ${import_chalk14.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#framework-field-mandatory")}

      ${import_chalk14.default.underline(import_chalk14.default.bold(import_chalk14.default.cyan("Webpack4 users")))}

      Unless you're using Storybook's Vite builder, this automigration will install a Webpack5-based framework.
      
      If you were using Storybook's Webpack4 builder (default in 6.x, discontinued in 7.0), this could be a breaking
      change -- especially if your project has a custom webpack configuration.
      
      To learn more about migrating from Webpack4, see: ${import_chalk14.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#webpack4-support-discontinued")}
    `},async run({result:{dependenciesToAdd,dependenciesToRemove,main,frameworkPackage,frameworkOptions,builderInfo,packageJson},packageManager,dryRun}){if(logger13.info(`\u2705 Removing legacy dependencies: ${dependenciesToRemove.join(", ")}`),dryRun||packageManager.removeDependencies({skipInstall:dependenciesToAdd.length>0,packageJson},dependenciesToRemove),dependenciesToAdd.length>0&&(logger13.info(`\u2705 Installing new dependencies: ${dependenciesToAdd.join(", ")}`),!dryRun)){let versionToInstall=getStorybookVersionSpecifier(packageJson),depsToAdd=dependenciesToAdd.map(dep=>`${dep}@${versionToInstall}`);packageManager.addDependencies({installAsDevDependencies:!0},depsToAdd)}if(!dryRun){logger13.info("\u2705 Updating framework field in main.js");let currentCore=main.getFieldValue(["core"]);main.setFieldValue(["framework","name"],frameworkPackage),main.setFieldValue(["framework","options"],frameworkOptions),currentCore!=null&&currentCore.builder&&delete currentCore.builder,frameworkPackage==="@storybook/svelte-vite"&&main.getFieldNode(["svelteOptions"])&&(logger13.info("\u2705 Removing svelteOptions field in main.js"),main.removeField(["svelteOptions"])),Object.keys(builderInfo.options).length>0&&main.setFieldValue(["framework","options","builder"],builderInfo.options),currentCore&&(Object.keys(currentCore).length===0?main.removeField(["core"]):main.setFieldValue(["core"],currentCore)),await(0,import_csf_tools6.writeConfig)(main)}}};var import_chalk15=__toESM(require("chalk")),import_ts_dedent16=__toESM(require("ts-dedent")),import_core_common9=require("@storybook/core-common"),import_fs_extra7=require("fs-extra"),RemovedAPIs=(RemovedAPIs2=>(RemovedAPIs2.addDecorator="addDecorator",RemovedAPIs2.addParameters="addParameters",RemovedAPIs2.addLoader="addLoader",RemovedAPIs2.getStorybook="getStorybook",RemovedAPIs2.setAddon="setAddon",RemovedAPIs2.clearDecorators="clearDecorators",RemovedAPIs2))(RemovedAPIs||{}),removedGlobalClientAPIs={id:"removedglobalclientapis",promptOnly:!0,async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),{previewConfig}=(0,import_core_common9.getStorybookInfo)(packageJson);if(previewConfig){let contents=await(0,import_fs_extra7.readFile)(previewConfig,"utf8"),usedAPIs=Object.values(RemovedAPIs).reduce((acc,item)=>(contents.includes(item)&&acc.push(item),acc),[]);if(usedAPIs.length)return{usedAPIs,previewPath:previewConfig}}return null},prompt({usedAPIs,previewPath}){return import_ts_dedent16.default`
      ${import_chalk15.default.bold(import_chalk15.default.red("Attention"))}: We could not automatically make this change. You'll need to do it manually.

      The following APIs (used in "${import_chalk15.default.yellow(previewPath)}") have been removed from Storybook:
      
      ${usedAPIs.map(api=>`- ${import_chalk15.default.cyan(api)}`).join(`
`)}

      Please see the migration guide for more information:
      ${import_chalk15.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#removed-global-client-apis")}
    `}};var import_chalk16=__toESM(require("chalk")),import_ts_dedent17=require("ts-dedent"),import_path10=require("path"),import_fs_extra8=__toESM(require("fs-extra")),import_globby=__toESM(require("globby")),MDX1_STYLE_START=/<style>{`/g,MDX1_STYLE_END=/`}<\/style>/g,MDX1_COMMENT=/<!--(.+)-->/g,MDX1_CODEBLOCK=/(?:\n~~~(?:\n|.)*?\n~~~)|(?:\n```(?:\n|.)*?\n```)/g,fixMdxStyleTags=mdx=>mdx.replace(MDX1_STYLE_START,"<style>\n  {`").replace(MDX1_STYLE_END,"  `}\n</style>"),fixMdxComments=mdx=>{let codeblocks=mdx.matchAll(MDX1_CODEBLOCK);return mdx.split(MDX1_CODEBLOCK).map(v=>v.replace(MDX1_COMMENT,(original,group)=>`{/*${group}*/}`)).reduce((acc,item,i)=>{let next=codeblocks.next();return next.done?acc+item:acc+item+next.value[0]},"")},logger14=console,mdx1to2={id:"mdx1to2",async check(){let storiesMdxFiles=await(0,import_globby.default)("./!(node_modules)**/*.(story|stories).mdx");return storiesMdxFiles.length?{storiesMdxFiles}:void 0},prompt({storiesMdxFiles}){return import_ts_dedent17.dedent`
      We've found ${import_chalk16.default.yellow(storiesMdxFiles.length)} '.stories.mdx' files in your project.
      
      Storybook has upgraded to MDX2 (https://mdxjs.com/blog/v2/), which contains breaking changes from MDX1.
      We can try to automatically upgrade your MDX files to MDX2 format using some common patterns.
      
      After this install completes, and before you start Storybook, we strongly recommend reading the MDX2 section
      of the 7.0 migration guide. It contains useful tools for detecting and fixing any remaining issues.
      
      ${import_chalk16.default.cyan("https://storybook.js.org/migration-guides/7.0")}
    `},async run({result:{storiesMdxFiles},dryRun}){await Promise.all([...storiesMdxFiles.map(async fname=>{let contents=await import_fs_extra8.default.readFile(fname,"utf-8"),updated=fixMdxComments(fixMdxStyleTags(contents));updated===contents?logger14.info(`\u{1F197} Unmodified ${(0,import_path10.basename)(fname)}`):(logger14.info(`\u2705 Modified ${(0,import_path10.basename)(fname)}`),dryRun||await import_fs_extra8.default.writeFile(fname,updated))})])}};var import_chalk17=__toESM(require("chalk")),import_ts_dedent18=require("ts-dedent"),import_csf_tools7=require("@storybook/csf-tools"),import_core_common10=require("@storybook/core-common"),logger15=console,autodocsTrue={id:"autodocsTrue",async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),{mainConfig}=(0,import_core_common10.getStorybookInfo)(packageJson);if(!mainConfig)return logger15.warn("Unable to find storybook main.js config, skipping"),null;let main=await(0,import_csf_tools7.readConfig)(mainConfig),docs=main.getFieldValue(["docs"]),docsPageToAutodocsMapping={true:"tag",automatic:!0,false:!1};if(docs!=null&&docs.docsPage){let oldValue=docs==null?void 0:docs.docsPage.toString();if(!(oldValue in docsPageToAutodocsMapping))throw new Error(`Unexpected value for docs.docsPage: ${oldValue}`);return{main,value:docsPageToAutodocsMapping[oldValue]}}return(docs==null?void 0:docs.autodocs)===void 0?{main}:null},prompt({value}){let autodocsFormatted=import_chalk17.default.cyan(`docs: { autodocs: ${JSON.stringify(value??!0)} }`);return value?import_ts_dedent18.dedent`
      We've changed the configuration of autodocs (previous docsPage), so now the value:
        - docs.autodocs: true -- means automatically create docs for every CSF file
        - docs.autodocs: 'tag' -- means only create autodocs for CSF files with the 'autodocs' tag
        - docs.autodocs: false -- means never create autodocs

      Based on your prior configuration,  we can set the \`docs.autodocs\` to keep your old behaviour:

      ${autodocsFormatted}

      ${value==="tag"&&"NOTE: it is important you change all CSF files to use the 'autodocs' tag rather than the 'docsPage' tag."}

      More info: ${import_chalk17.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#autodocs")}
    `:import_ts_dedent18.dedent`
      We've detected that your main.js configuration file has not configured autodocs. In 6.x we
      we defaulted to having a autodocs for every story, in 7.x you need to opt in per-component.
      However, we can set the \`docs.autodocs\` to true to approximate the old behaviour:

      ${autodocsFormatted}

      More info: ${import_chalk17.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#autodocs")}
    `},async run({result:{main,value},dryRun}){logger15.info("\u2705 Setting 'docs.autodocs' to true in main.js"),dryRun||(main.removeField(["docs","docsPage"]),main.setFieldValue(["docs","autodocs"],value??!0),await(0,import_csf_tools7.writeConfig)(main))}};var import_chalk18=__toESM(require("chalk")),import_ts_dedent19=__toESM(require("ts-dedent")),import_semver16=__toESM(require("semver")),import_csf_tools8=require("@storybook/csf-tools"),import_core_common11=require("@storybook/core-common");var logger16=console,fixId="sveltekitFramework",sveltekitFramework={id:fixId,async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson();if(!{...packageJson.dependencies,...packageJson.devDependencies}["@sveltejs/kit"])return null;let{mainConfig,version:storybookVersion}=(0,import_core_common11.getStorybookInfo)(packageJson);if(!mainConfig)return logger16.warn("Unable to find storybook main.js config, skipping"),null;let sbVersionCoerced=storybookVersion&&((_a=import_semver16.default.coerce(storybookVersion))==null?void 0:_a.version);if(!sbVersionCoerced)throw new Error(import_ts_dedent19.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver16.default.gte(sbVersionCoerced,"7.0.0"))return null;let main=await(0,import_csf_tools8.readConfig)(mainConfig),framework=main.getNameFromPath(["framework"]);if(!framework)return logger16.warn(import_ts_dedent19.default`
      ❌ Unable to determine Storybook framework, skipping ${import_chalk18.default.cyan(fixId)} fix.
      🤔 Are you running automigrate from your project directory?
    `),null;if(framework==="@storybook/sveltekit")return null;if(framework==="@storybook/svelte-vite")return{main,packageJson,dependenciesToRemove:["@storybook/svelte-vite"]};if(framework!=="@storybook/svelte")return logger16.warn(import_ts_dedent19.default`
            We've detected you are using Storybook in a SvelteKit project.
      
            In Storybook 7, we introduced a new framework package for SvelteKit projects: @storybook/sveltekit.
      
            This package provides a better experience for SvelteKit users, however it is only compatible with the Svelte framework and the Vite builder, so we can't automigrate for you, as you are using another framework and builder combination.
            
            If you are interested in using this package, see: ${import_chalk18.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sveltekit-needs-the-storybooksveltekit-framework")}
          `),null;let builder=main.getFieldValue(["core","builder"]);return["@storybook/builder-vite","storybook-builder-vite"].includes(builder)?{main,packageJson,dependenciesToRemove:[builder]}:(logger16.warn(import_ts_dedent19.default`
          We've detected you are using Storybook in a SvelteKit project.
    
          In Storybook 7, we introduced a new framework package for SvelteKit projects: @storybook/sveltekit.
    
          This package provides a better experience for SvelteKit users, however it is only compatible with the Vite builder, so we can't automigrate for you, as you are using another builder.
          
          If you are interested in using this package, see: ${import_chalk18.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sveltekit-needs-the-storybooksveltekit-framework")}
        `),null)},prompt(){return import_ts_dedent19.default`
      We've detected you are using Storybook in a SvelteKit project.

      In Storybook 7, we introduced a new framework package for SvelteKit projects: @storybook/sveltekit
      This package is a replacement for @storybook/svelte-vite and provides a better experience for SvelteKit users.

      We can automatically migrate your project to use the new SvelteKit framework package.

      To learn more about this change, see: ${import_chalk18.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sveltekit-needs-the-storybooksveltekit-framework")}
    `},async run({result:{main,packageJson,dependenciesToRemove},packageManager,dryRun}){if(logger16.info(`\u2705 Removing redundant packages: ${dependenciesToRemove.join(", ")}`),dryRun||packageManager.removeDependencies({skipInstall:!0,packageJson},dependenciesToRemove),logger16.info("\u2705 Installing new dependencies: @storybook/sveltekit"),!dryRun){let versionToInstall=getStorybookVersionSpecifier(packageJson);packageManager.addDependencies({installAsDevDependencies:!0,packageJson},[`@storybook/sveltekit@${versionToInstall}`])}logger16.info("\u2705 Updating framework field in main.js"),main.setFieldValue(["framework"],"@storybook/sveltekit");let currentCore=main.getFieldValue(["core"]);if(currentCore.builder){logger16.info("\u2705 Updating core field in main.js");let{builder,...core}=currentCore;Object.keys(core).length===0?main.removeField(["core"]):main.setFieldValue(["core"],core)}main.getFieldNode(["svelteOptions"])&&(logger16.info("\u2705 Removing svelteOptions field in main.js"),main.removeField(["svelteOptions"])),dryRun||await(0,import_csf_tools8.writeConfig)(main)}};var import_chalk19=__toESM(require("chalk")),import_ts_dedent20=require("ts-dedent"),addReact={id:"addReact",async check({packageManager}){let packageJson=packageManager.retrievePackageJson(),installedDependencies=new Set(Object.keys({...packageJson.dependencies,...packageJson.devDependencies})),dependents=["@storybook/addon-essentials","@storybook/addon-docs"].filter(pkg2=>installedDependencies.has(pkg2)),additionalDependencies=[];return dependents.length>0&&(installedDependencies.has("react")||additionalDependencies.push("react"),installedDependencies.has("react-dom")||additionalDependencies.push("react-dom")),additionalDependencies.length>0?{dependents,additionalDependencies}:null},prompt({dependents,additionalDependencies}){let dependentsFormatted=dependents.map(pkg2=>import_chalk19.default.cyan(pkg2)).join(" & "),additionalDependenciesFormatted=additionalDependencies.map(pkg2=>`- ${import_chalk19.default.cyan(pkg2)}`).join(`
`);return import_ts_dedent20.dedent`
      We've detected that you're using ${dependentsFormatted}.
      
      Starting in Storybook 7 we now require the following peer dependencies:

      ${additionalDependenciesFormatted}

      We can add these for you automatically.
      
      More info: ${import_chalk19.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#react-peer-dependencies-required")}
    `},async run({packageManager,result:{additionalDependencies},dryRun}){dryRun||packageManager.addDependencies({installAsDevDependencies:!0},additionalDependencies)}};var import_chalk20=__toESM(require("chalk")),import_ts_dedent21=__toESM(require("ts-dedent")),import_semver17=__toESM(require("semver")),import_core_common12=require("@storybook/core-common"),nodeJsRequirement={id:"nodejs-requirement",promptOnly:!0,async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{version:storybookVersion}=(0,import_core_common12.getStorybookInfo)(packageJson),storybookCoerced=storybookVersion&&((_a=import_semver17.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent21.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver17.default.gte(storybookCoerced,"7.0.0"))return null;let nodeVersion=process.version;return import_semver17.default.lt(nodeVersion,"16.0.0")?{nodeVersion}:null},prompt({nodeVersion}){return import_ts_dedent21.default`
      ${import_chalk20.default.bold(import_chalk20.default.red("Attention"))}: We could not automatically make this change. You'll need to do it manually.

      We've detected that you're using Node ${import_chalk20.default.bold(nodeVersion)} but Storybook 7 only supports Node ${import_chalk20.default.bold("v16.0.0")} and higher. You will either need to upgrade your Node version or keep using an older version of Storybook.

      Please see the migration guide for more information:
      ${import_chalk20.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#dropped-support-for-node-15-and-below")}
    `}};var import_chalk21=__toESM(require("chalk")),import_ts_dedent22=__toESM(require("ts-dedent")),import_semver18=__toESM(require("semver")),import_core_common13=require("@storybook/core-common"),import_core=require("@babel/core"),import_csf_tools9=require("@storybook/csf-tools");var logger17=console,frameworksThatNeedBabelConfig=["@storybook/react-webpack5","@storybook/vue-webpack5","@storybook/vue3-webpack5","@storybook/html-webpack5"],missingBabelRc={id:"missing-babelrc",async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{mainConfig,version:storybookVersion}=(0,import_core_common13.getStorybookInfo)(packageJson),storybookCoerced=storybookVersion&&((_a=import_semver18.default.coerce(storybookVersion))==null?void 0:_a.version);if(!storybookCoerced)throw new Error(import_ts_dedent22.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver18.default.gte(storybookCoerced,"7.0.0"))return null;if(!mainConfig)return logger17.warn("Unable to find storybook main.js config, skipping"),null;let main=await(0,import_csf_tools9.readConfig)(mainConfig),frameworkPackage=main.getNameFromPath(["framework"]),addons=main.getNamesFromPath(["addons"]),hasCraPreset=addons&&addons.find(addon=>addon==="@storybook/preset-create-react-app");if(frameworkPackage&&frameworksThatNeedBabelConfig.includes(frameworkPackage)&&!hasCraPreset){let config=await(0,import_core.loadPartialConfigAsync)({babelrc:!0,filename:"__fake__.js"});if(!config.config&&!config.babelrc&&!packageJson.babel)return{needsBabelRc:!0}}return null},prompt(){return import_ts_dedent22.default`
      We detected that your project does not have a babel configuration (.babelrc, babel.config.js, etc.).

      In version 6.x, Storybook provided its own babel settings out of the box. Now, Storybook re-uses ${import_chalk21.default.bold("your project's babel configuration")}, with small, incremental updates from Storybook addons.

      If your project does not have a babel configuration file, we can generate one that's equivalent to the 6.x defaults for you. Keep in mind that this can affect your project if it uses babel, and you may need to make additional changes based on your projects needs.

      We can create a ${import_chalk21.default.blue(".babelrc.json")} file with some basic configuration and add any necessary package devDependencies.

      Please see the migration guide for more information:
      ${import_chalk21.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#babel-mode-v7-exclusively")}
    `},async run(){logger17.info(),await generateStorybookBabelConfigInCWD()}};var import_chalk22=__toESM(require("chalk")),import_ts_dedent23=__toESM(require("ts-dedent")),import_semver19=__toESM(require("semver")),import_csf_tools10=require("@storybook/csf-tools"),import_core_common14=require("@storybook/core-common"),logger18=console,fixId2="bare-mdx-stories-glob",getNextGlob=glob=>{let extGlobsRegex=new RegExp(/(.*\.)(stories\.@.*)(\|mdx|mdx\|)(.*)$/i);if(glob.match(extGlobsRegex))return glob.replace(extGlobsRegex,"$1@(mdx|$2$4)");let allStoriesExtensionsRegex=new RegExp(/(.*\.)(stories\.\*)$/i);return glob.match(allStoriesExtensionsRegex)?glob.replace(allStoriesExtensionsRegex,"$1@(mdx|$2)"):glob.replaceAll(".stories.mdx",".mdx")},bareMdxStoriesGlob={id:fixId2,async check({packageManager}){var _a;let packageJson=packageManager.retrievePackageJson(),{mainConfig,version:storybookVersion}=(0,import_core_common14.getStorybookInfo)(packageJson);if(!mainConfig)return logger18.warn("Unable to find storybook main.js config, skipping"),null;let sbVersionCoerced=storybookVersion&&((_a=import_semver19.default.coerce(storybookVersion))==null?void 0:_a.version);if(!sbVersionCoerced)throw new Error(import_ts_dedent23.default`
        ❌ Unable to determine storybook version.
        🤔 Are you running automigrate from your project directory?
      `);if(!import_semver19.default.gte(sbVersionCoerced,"7.0.0"))return null;let main=await(0,import_csf_tools10.readConfig)(mainConfig),existingStoriesEntries;try{existingStoriesEntries=main.getFieldValue(["stories"])}catch{}if(!existingStoriesEntries)throw new Error(import_ts_dedent23.default`
      ❌ Unable to determine Storybook stories globs, skipping ${import_chalk22.default.cyan(fixId2)} fix.
      
      In Storybook 7, we have deprecated defining stories in MDX files, and consequently have changed the suffix to simply .mdx.

      We were unable to automatically migrate your 'stories' config to include any .mdx file instead of just .stories.mdx.
      We suggest you make this change manually.

      To learn more about this change, see: ${import_chalk22.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mdx-docs-files")}
      `);let nextStoriesEntries=existingStoriesEntries.map(entry=>{let isSpecifier=typeof entry!="string",glob=isSpecifier?entry.files:entry;if(!glob)return entry;let nextGlob=getNextGlob(glob);return isSpecifier?{...entry,files:nextGlob}:nextGlob});return existingStoriesEntries.length===nextStoriesEntries.length&&existingStoriesEntries.every((entry,index)=>{let nextEntry=nextStoriesEntries[index];return typeof entry=="string"?entry===nextEntry:typeof nextEntry=="string"?!1:entry.files===nextEntry.files})?null:{existingStoriesEntries,nextStoriesEntries,main}},prompt({existingStoriesEntries,nextStoriesEntries}){let prettyExistingStoriesEntries=existingStoriesEntries.map(entry=>JSON.stringify(entry,null,2)).join(`
`),prettyNextStoriesEntries=nextStoriesEntries.map(entry=>JSON.stringify(entry,null,2)).join(`
`);return import_ts_dedent23.default`
    We've detected your project has one or more globs in your 'stories' config that matches .stories.mdx files:
      ${import_chalk22.default.cyan(prettyExistingStoriesEntries)}
    
    In Storybook 7, we have deprecated defining stories in MDX files, and consequently have changed the suffix to simply .mdx.

    We can automatically migrate your 'stories' config to include any .mdx file instead of just .stories.mdx.
    That would result in the following 'stories' config:
      ${import_chalk22.default.cyan(prettyNextStoriesEntries)}

    To learn more about this change, see: ${import_chalk22.default.yellow("https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mdx-docs-files")}
  `},async run({dryRun,result:{nextStoriesEntries,main}}){logger18.info(import_ts_dedent23.default`✅ Setting 'stories' config:
      ${JSON.stringify(nextStoriesEntries,null,2)}`),main.setFieldValue(["stories"],nextStoriesEntries),dryRun||await(0,import_csf_tools10.writeConfig)(main)}};var fixes=[nodeJsRequirement,cra5,webpack5,angular12,vue3,mainjsFramework,eslintPlugin,sveltekitFramework,builderVite,sbBinary,sbScripts,newFrameworks,nextjsFramework,removedGlobalClientAPIs,mdx1to2,bareMdxStoriesGlob,autodocsTrue,addReact,missingBabelRc];var import_os=require("os"),ansiRegex=({onlyFirst=!1}={})=>{let pattern=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(pattern,onlyFirst?void 0:"g")},cleanLog=str=>str.replace(ansiRegex(),"").replace(/╮│/g,`\u256E
\u2502`).replace(/││/g,`\u2502
\u2502`).replace(/│╰/g,`\u2502
\u2570`).replace(/⚠️ {2}failed to check/g,`${import_os.EOL}\u26A0\uFE0F  failed to check`);var logger19=console,LOG_FILE_NAME="migration-storybook.log",LOG_FILE_PATH=(0,import_path11.join)(process.cwd(),LOG_FILE_NAME),TEMP_LOG_FILE_PATH="",originalStdOutWrite=process.stdout.write.bind(process.stdout),originalStdErrWrite=process.stderr.write.bind(process.stdout),augmentLogsToFile=()=>{TEMP_LOG_FILE_PATH=import_tempy.default.file({name:LOG_FILE_NAME});let logStream=(0,import_fs_extra9.createWriteStream)(TEMP_LOG_FILE_PATH);process.stdout.write=d=>(originalStdOutWrite(d),logStream.write(cleanLog(d))),process.stderr.write=d=>logStream.write(cleanLog(d))},cleanup=()=>{process.stdout.write=originalStdOutWrite,process.stderr.write=originalStdErrWrite};var logAvailableMigrations=()=>{let availableFixes=fixes.map(f=>import_chalk23.default.yellow(f.id)).join(", ");logger19.info(`
The following migrations are available: ${availableFixes}`)},automigrate=async({fixId:fixId3,dryRun,yes,useNpm,packageManager:pkgMgr,list}={})=>{if(list)return logAvailableMigrations(),null;useNpm&&(useNpmWarning(),pkgMgr="npm");let fixes2=fixId3?fixes.filter(f=>f.id===fixId3):fixes;if(fixId3&&fixes2.length===0)return logger19.info(`\u{1F4ED} No migrations found for ${import_chalk23.default.magenta(fixId3)}.`),logAvailableMigrations(),null;augmentLogsToFile();let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr});logger19.info("\u{1F50E} checking possible migrations..");let fixResults={},fixSummary={succeeded:[],failed:{},manual:[],skipped:[]};for(let i=0;i<fixes2.length;i+=1){let f=fixes2[i],result;try{result=await f.check({packageManager})}catch(error){logger19.info(`\u26A0\uFE0F  failed to check fix ${import_chalk23.default.bold(f.id)}`),logger19.error(`
${error.stack}`),fixSummary.failed[f.id]=error.message,fixResults[f.id]="check_failed"}if(result){logger19.info(`
\u{1F50E} found a '${import_chalk23.default.cyan(f.id)}' migration:`);let message=f.prompt(result);logger19.info((0,import_boxen.default)(message,{borderStyle:"round",padding:1,borderColor:"#F1618C",title:f.promptOnly?"Manual migration detected":"Automigration detected"}));let runAnswer;try{if(dryRun)runAnswer={fix:!1};else if(yes)runAnswer={fix:!0},f.promptOnly&&(fixResults[f.id]="manual_succeeded",fixSummary.manual.push(f.id));else if(f.promptOnly){fixResults[f.id]="manual_succeeded",fixSummary.manual.push(f.id),logger19.info();let{shouldContinue}=await(0,import_prompts3.default)({type:"toggle",name:"shouldContinue",message:"Select continue once you have made the required changes, or quit to exit the migration process",initial:!0,active:"continue",inactive:"quit"},{onCancel:()=>{throw new Error}});if(!shouldContinue){fixResults[f.id]="manual_skipped";break}}else runAnswer=await(0,import_prompts3.default)({type:"confirm",name:"fix",message:`Do you want to run the '${import_chalk23.default.cyan(f.id)}' migration on your project?`,initial:!0},{onCancel:()=>{throw new Error}})}catch{break}if(!f.promptOnly)if(runAnswer.fix)try{await f.run({result,packageManager,dryRun}),logger19.info(`\u2705 ran ${import_chalk23.default.cyan(f.id)} migration`),fixResults[f.id]="succeeded",fixSummary.succeeded.push(f.id)}catch(error){fixResults[f.id]="failed",fixSummary.failed[f.id]=error.message,logger19.info(`\u274C error when running ${import_chalk23.default.cyan(f.id)} migration`),logger19.info(error),logger19.info()}else fixResults[f.id]="skipped",fixSummary.skipped.push(f.id)}else fixResults[f.id]=fixResults[f.id]||"unnecessary"}return Object.values(fixResults).some(r=>r==="failed"||r==="check_failed")?await(0,import_fs_extra9.move)(TEMP_LOG_FILE_PATH,(0,import_path11.join)(process.cwd(),LOG_FILE_NAME),{overwrite:!0}):await(0,import_fs_extra9.remove)(TEMP_LOG_FILE_PATH),logger19.info(),logger19.info(getMigrationSummary(fixResults,fixSummary,LOG_FILE_PATH)),logger19.info(),cleanup(),fixResults};function getMigrationSummary(fixResults,fixSummary,logFile){let hasNoFixes=Object.values(fixResults).every(r=>r==="unnecessary"),hasFailures=Object.values(fixResults).some(r=>r==="failed"||r==="check_failed"),title=hasNoFixes?"No migrations were applicable to your project":hasFailures?"Migration check ran with failures":"Migration check ran successfully",successfulFixesMessage=fixSummary.succeeded.length>0?`
      ${import_chalk23.default.bold("Successful migrations:")}

 ${fixSummary.succeeded.map(m=>import_chalk23.default.green(m)).join(", ")}
    `:"",failedFixesMessage=Object.keys(fixSummary.failed).length>0?`
    ${import_chalk23.default.bold("Failed migrations:")}
 ${Object.entries(fixSummary.failed).reduce((acc,[id,error])=>`${acc}
${import_chalk23.default.redBright(id)}:
${error}
`,"")}
    
You can find the full logs in ${import_chalk23.default.cyan(logFile)}
`:"",manualFixesMessage=fixSummary.manual.length>0?`
      ${import_chalk23.default.bold("Manual migrations:")}

 ${fixSummary.manual.map(m=>fixResults[m]==="manual_succeeded"?import_chalk23.default.green(m):import_chalk23.default.blue(m)).join(", ")}
    `:"",skippedFixesMessage=fixSummary.skipped.length>0?`
      ${import_chalk23.default.bold("Skipped migrations:")}

 ${fixSummary.skipped.map(m=>import_chalk23.default.cyan(m)).join(", ")}
    `:"",summaryMessage=import_ts_dedent24.default`
    ${successfulFixesMessage}${manualFixesMessage}${failedFixesMessage}${skippedFixesMessage}${hasNoFixes?"":`
\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500

`}If you'd like to run the migrations again, you can do so by running '${import_chalk23.default.cyan("npx storybook@next automigrate")}'
    
    The automigrations try to migrate common patterns in your project, but might not contain everything needed to migrate to the latest version of Storybook.
    
    Please check the changelog and migration guide for manual migrations and more information: ${import_chalk23.default.yellow("https://storybook.js.org/migration-guides/7.0")}
    And reach out on Discord if you need help: ${import_chalk23.default.yellow("https://discord.gg/storybook")}
  `;return(0,import_boxen.default)(summaryMessage,{borderStyle:"round",padding:1,title,borderColor:hasFailures?"red":"green"})}var logger20=console,installStorybook=(projectType,packageManager,options)=>{let npmOptions={installAsDevDependencies:!0,skipInstall:options.skipInstall},packageJson;try{packageJson=packageManager.readPackageJson()}catch{}let generatorOptions={language:detectLanguage(packageJson),builder:options.builder||detectBuilder(packageManager),linkable:!!options.linkable,pnp:options.usePnp};return(async()=>{switch(projectType){case"REACT_SCRIPTS":return REACT_SCRIPTS_default(packageManager,npmOptions,generatorOptions).then(commandLog('Adding Storybook support to your "Create React App" based project'));case"REACT":return REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "React" app
`));case"REACT_NATIVE":return REACT_NATIVE_default(packageManager,npmOptions).then(commandLog(`Adding Storybook support to your "React Native" app
`));case"QWIK":return QWIK_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Qwik" app
`));case"WEBPACK_REACT":return WEBPACK_REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Webpack React" app
`));case"REACT_PROJECT":return REACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "React" library
`));case"NEXTJS":return NEXTJS_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Next" app
`));case"SFC_VUE":return SFC_VUE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Single File Components Vue" app
`));case"VUE":return VUE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Vue" app
`));case"VUE3":return VUE3_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Vue 3" app
`));case"ANGULAR":return commandLog(`Adding Storybook support to your "Angular" app
`),ANGULAR_default(packageManager,npmOptions,generatorOptions,options);case"EMBER":return EMBER_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Ember" app
`));case"MITHRIL":return MITHRIL_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Mithril" app
`));case"MARIONETTE":return MARIONETTE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Marionette.js" app
`));case"MARKO":return MARKO_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Marko" app
`));case"HTML":return HTML_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "HTML" app
`));case"WEB_COMPONENTS":return WEB_COMPONENTS_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "web components" app
`));case"RIOT":return RIOT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "riot.js" app
`));case"PREACT":return PREACT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Preact" app
`));case"SVELTE":return SVELTE_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Svelte" app
`));case"SVELTEKIT":return SVELTEKIT_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "SvelteKit" app
`));case"RAX":return RAX_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Rax" app
`));case"AURELIA":return AURELIA_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Aurelia" app
`));case"SERVER":return SERVER_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "Server" app
`));case"NX":return paddedLog("We have detected Nx in your project. Please use `nx g @nrwl/storybook:configuration` to add Storybook to your project."),paddedLog("For more information, please see https://nx.dev/packages/storybook"),Promise.reject();case"SOLID":return SOLID_default(packageManager,npmOptions,generatorOptions).then(commandLog(`Adding Storybook support to your "SolidJS" app
`));case"UNSUPPORTED":return paddedLog("We detected a project type that we don't support yet."),paddedLog("If you'd like your framework to be supported, please let use know about it at https://github.com/storybookjs/storybook/issues"),logger20.log(),Promise.resolve();default:return paddedLog(`We couldn't detect your project type. (code: ${projectType})`),paddedLog("You can specify a project type explicitly via `sb init --type <type>`, see our docs on how to configure Storybook for your framework: https://storybook.js.org/docs/react/get-started/install"),logger20.log(),projectTypeInquirer(options,packageManager)}})().catch(ex=>{logger20.error(`
     ${import_chalk24.default.red(ex.stack)}`),process.exit(1)})},projectTypeInquirer=async(options,packageManager)=>{let manualAnswer=options.yes?!0:await(0,import_prompts4.default)([{type:"confirm",name:"manual",message:"Do you want to manually choose a Storybook project type to install?"}]);if(manualAnswer!==!0&&manualAnswer.manual){let frameworkAnswer=await(0,import_prompts4.default)([{type:"select",name:"manualFramework",message:"Please choose a project type from the following list:",choices:installableProjectTypes.map(type=>({title:type,value:type.toUpperCase()}))}]);return installStorybook(frameworkAnswer.manualFramework,packageManager,options)}return Promise.resolve()};async function doInitiate(options,pkg2){let{packageManager:pkgMgr}=options;options.useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),welcomeMessage="storybook init - the simplest way to add a Storybook to your project.";logger20.log(import_chalk24.default.inverse(`
 ${welcomeMessage} 
`));let{default:updateNotifier}=await import("simple-update-notifier");await updateNotifier({pkg:pkg2,updateCheckInterval:1e3*60*60});let projectType,projectTypeProvided=options.type,infoText=projectTypeProvided?`Installing Storybook for user specified project type: ${projectTypeProvided}`:"Detecting project type",done=commandLog(infoText),packageJson=packageManager.retrievePackageJson();try{projectTypeProvided?installableProjectTypes.includes(projectTypeProvided)?projectType=projectTypeProvided.toUpperCase():(done(`The provided project type was not recognized by Storybook: ${projectTypeProvided}`),logger20.log(`
The project types currently supported by Storybook are:
`),installableProjectTypes.sort().forEach(framework=>paddedLog(`- ${framework}`)),logger20.log(),process.exit(1)):projectType=detect(packageJson,options)}catch(ex){done(ex.message),process.exit(1)}done();let storybookInstalled=isStorybookInstalled(packageJson,options.force);if(storybookInstalled&&projectType!=="ANGULAR"){logger20.log(),paddedLog("There seems to be a Storybook already available in this project."),paddedLog(`Apply following command to force:
`),codeLog(["sb init [options] -f"]),logger20.log();return}let installResult=await installStorybook(projectType,packageManager,options).catch(e=>{process.exit()});!options.skipInstall&&!storybookInstalled&&packageManager.installDependencies(),options.disableTelemetry||(0,import_telemetry.telemetry)("init",{projectType}),projectType!=="REACT_NATIVE"&&await automigrate({yes:options.yes||process.env.CI==="true",packageManager:pkgMgr}),logger20.log(`
For more information visit:`,import_chalk24.default.cyan("https://storybook.js.org")),projectType==="ANGULAR"?(logger20.log(`
To run your Storybook, type:
`),codeLog([`ng run ${installResult.projectName}:storybook`])):projectType==="REACT_NATIVE"?(logger20.log(),logger20.log(import_chalk24.default.yellow(`NOTE: installation is not 100% automated.
`)),logger20.log(`To quickly run Storybook, replace contents of your app entry with:
`),codeLog(["export {default} from './.storybook';"]),logger20.log(`
 Then to run your Storybook, type:
`),codeLog([packageManager.getRunCommand("start")]),logger20.log(`
 For more in information, see the github readme:
`),logger20.log(import_chalk24.default.cyan("https://github.com/storybookjs/react-native")),logger20.log()):(logger20.log(`
To run your Storybook, type:
`),codeLog([packageManager.getRunStorybookCommand()])),logger20.log()}async function initiate(options,pkg2){await(0,import_core_server.withTelemetry)("init",{cliOptions:options},()=>doInitiate(options,pkg2))}var import_path12=__toESM(require("path")),import_fs7=__toESM(require("fs")),import_cross_spawn3=require("cross-spawn"),import_core_common15=require("@storybook/core-common"),import_csf_tools11=require("@storybook/csf-tools");var logger21=console,LEGACY_CONFIGS=["addons","config","presets"],postinstallAddon=async(addonName,isOfficialAddon)=>{let skipMsg=null;isOfficialAddon?import_fs7.default.existsSync(".storybook")?(skipMsg="no codmods found",LEGACY_CONFIGS.forEach(config=>{try{let codemod=require.resolve(`${getPackageName(addonName,isOfficialAddon)}/postinstall/${config}.js`);commandLog(`Running postinstall script for ${addonName}`)();let configFile=import_path12.default.join(".storybook",`${config}.ts`);import_fs7.default.existsSync(configFile)||(configFile=import_path12.default.join(".storybook",`${config}.js`),import_fs7.default.existsSync(configFile)||import_fs7.default.writeFileSync(configFile,"","utf8")),(0,import_cross_spawn3.sync)("npx",["jscodeshift","-t",codemod,configFile],{stdio:"inherit",shell:!0}),skipMsg=null}catch{}})):skipMsg="no .storybook config":skipMsg="unofficial addon",skipMsg&&commandLog(`Skipping postinstall for ${addonName}, ${skipMsg}`)()},getVersionSpecifier=addon=>{let groups=/^(...*)@(.*)$/.exec(addon);return groups?[groups[1],groups[2]]:[addon,void 0]};async function add(addon,options){let{packageManager:pkgMgr}=options;options.useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),packageJson=packageManager.retrievePackageJson(),[addonName,versionSpecifier]=getVersionSpecifier(addon),{mainConfig,version:storybookVersion}=(0,import_core_common15.getStorybookInfo)(packageJson);if(!mainConfig){logger21.error("Unable to find storybook main.js config");return}let main=await(0,import_csf_tools11.readConfig)(mainConfig),addons=main.getFieldValue(["addons"]);addons&&!Array.isArray(addons)&&logger21.error("Expected addons array in main.js config"),logger21.log(`Verifying ${addonName}`);let latestVersion=packageManager.latestVersion(addonName);latestVersion||logger21.error(`Unknown addon ${addonName}`);let isStorybookAddon=addonName.startsWith("@storybook/"),addonWithVersion=`${addonName}@${versionSpecifier||(isStorybookAddon?storybookVersion:latestVersion)}`;logger21.log(`Installing ${addonWithVersion}`),packageManager.addDependencies({installAsDevDependencies:!0},[addonWithVersion]),logger21.log(`Adding '${addon}' to main.js addons field.`);let updatedAddons=[...addons||[],addonName];main.setFieldValue(["addons"],updatedAddons),await(0,import_csf_tools11.writeConfig)(main),options.skipPostinstall||await postinstallAddon(addon,isStorybookAddon)}var import_codemod=require("@storybook/codemod");async function migrate(migration,{glob,dryRun,list,rename,logger:logger29,parser}){if(list)(0,import_codemod.listCodemods)().forEach(key=>logger29.log(key));else if(migration)await(0,import_codemod.runCodemod)(migration,{glob,dryRun,logger:logger29,rename,parser});else throw new Error("Migrate: please specify a migration name or --list")}var import_path13=__toESM(require("path")),import_fs_extra10=require("fs-extra"),import_puppeteer_core=__toESM(require("puppeteer-core")),import_express=__toESM(require("express")),import_get_port=__toESM(require("get-port")),import_node_logger3=require("@storybook/node-logger"),read=async url=>{let browser=await usePuppeteerBrowser(),page=await browser.newPage();await page.goto(url),await page.waitForFunction(`
    (window.__STORYBOOK_PREVIEW__ && window.__STORYBOOK_PREVIEW__.extract && window.__STORYBOOK_PREVIEW__.extract()) ||
    (window.__STORYBOOK_STORY_STORE__ && window.__STORYBOOK_STORY_STORE__.extract && window.__STORYBOOK_STORY_STORE__.extract())
  `);let data=JSON.parse(await page.evaluate(async()=>JSON.stringify(window.__STORYBOOK_STORY_STORE__.getStoriesJsonData(),null,2)));return setImmediate(()=>{browser.close()}),data},useLocation=async input=>{if(await(0,import_fs_extra10.stat)(import_path13.default.resolve(input)),input.match(/^http/))return[input,async()=>{}];let app=(0,import_express.default)();app.use(import_express.default.static(input));let port=await(0,import_get_port.default)();return new Promise(resolve=>{let server=app.listen(port,()=>{let result=`http://localhost:${port}/iframe.html`;import_node_logger3.logger.info(`connecting to: ${result}`),resolve([result,server.close.bind(server)])})})},usePuppeteerBrowser=async()=>{let args=["--no-sandbox ","--disable-setuid-sandbox"];try{return await import_puppeteer_core.default.launch({args,executablePath:process.env.SB_CHROMIUM_PATH})}catch{return import_node_logger3.logger.info("installing puppeteer..."),new Promise((resolve,reject)=>{require("child_process").exec(`node ${require.resolve(import_path13.default.join("puppeteer-core","install.js"))}`,error=>error?reject(error):resolve(import_puppeteer_core.default.launch({args})))})}};async function extract(input,targetPath){if(input&&targetPath){let[location,exit]=await useLocation(input),data=await read(location);await(0,import_fs_extra10.writeFile)(targetPath,JSON.stringify(data,null,2)),await exit()}else throw new Error("Extract: please specify a path where your built-storybook is (can be a public url) and a target directory")}var import_cross_spawn4=require("cross-spawn"),import_telemetry2=require("@storybook/telemetry"),import_semver20=__toESM(require("semver")),import_node_logger4=require("@storybook/node-logger"),import_core_server2=require("@storybook/core-server");var versionRegex=/(@storybook\/[^@]+)@(\S+)/,getStorybookVersion=line=>{if(line.startsWith("npm "))return null;let match=versionRegex.exec(line);return!match||!import_semver20.default.clean(match[2])?null:{package:match[1],version:match[2]}},excludeList=["@storybook/addon-bench","@storybook/addon-console","@storybook/addon-postcss","@storybook/babel-plugin-require-context-hook","@storybook/bench","@storybook/builder-vite","@storybook/csf","@storybook/design-system","@storybook/ember-cli-storybook","@storybook/eslint-config-storybook","@storybook/expect","@storybook/jest","@storybook/linter-config","@storybook/mdx1-csf","@storybook/mdx2-csf","@storybook/react-docgen-typescript-plugin","@storybook/storybook-deployer","@storybook/test-runner","@storybook/testing-library","@storybook/testing-react"],isCorePackage=pkg2=>pkg2.startsWith("@storybook/")&&!pkg2.startsWith("@storybook/preset-")&&!excludeList.includes(pkg2),deprecatedPackages=[{minVersion:"6.0.0-alpha.0",url:"https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#60-deprecations",deprecations:["@storybook/addon-notes","@storybook/addon-info","@storybook/addon-contexts","@storybook/addon-options","@storybook/addon-centered"]}],formatPackage=pkg2=>`${pkg2.package}@${pkg2.version}`,warnPackages=pkgs=>pkgs.forEach(pkg2=>import_node_logger4.logger.warn(`- ${formatPackage(pkg2)}`)),checkVersionConsistency=()=>{let storybookPackages=(0,import_cross_spawn4.sync)("npm",["ls"],{stdio:"pipe",shell:!0}).output.toString().split(`
`).map(getStorybookVersion).filter(Boolean).filter(pkg2=>isCorePackage(pkg2.package));if(!storybookPackages.length){import_node_logger4.logger.warn("No storybook core packages found."),import_node_logger4.logger.warn("'npm ls | grep storybook' can show if multiple versions are installed.");return}storybookPackages.sort((a,b)=>import_semver20.default.rcompare(a.version,b.version));let latestVersion=storybookPackages[0].version,outdated=storybookPackages.filter(pkg2=>pkg2.version!==latestVersion);outdated.length>0&&(import_node_logger4.logger.warn(`Found ${outdated.length} outdated packages (relative to '${formatPackage(storybookPackages[0])}')`),import_node_logger4.logger.warn("Please make sure your packages are updated to ensure a consistent experience."),warnPackages(outdated)),deprecatedPackages.forEach(({minVersion:minVersion2,url,deprecations})=>{if(import_semver20.default.gte(latestVersion,minVersion2)){let deprecated=storybookPackages.filter(pkg2=>deprecations.includes(pkg2.package));deprecated.length>0&&(import_node_logger4.logger.warn(`Found ${deprecated.length} deprecated packages since ${minVersion2}`),import_node_logger4.logger.warn(`See ${url}`),warnPackages(deprecated))}})},EXTRA_FLAGS={"react-scripts@<5":["--reject","/preset-create-react-app/"]},addExtraFlags=(extraFlags,flags,{dependencies,devDependencies})=>Object.entries(extraFlags).reduce((acc,entry)=>{let[pattern,extra]=entry,[pkg2,specifier]=getPackageDetails(pattern),pkgVersion=dependencies[pkg2]||devDependencies[pkg2];return pkgVersion&&import_semver20.default.satisfies(import_semver20.default.coerce(pkgVersion),specifier)?[...acc,...extra]:acc},[...flags]),doUpgrade=async({tag,prerelease,skipCheck,useNpm,packageManager:pkgMgr,dryRun,yes,...options})=>{useNpm&&(useNpmWarning(),pkgMgr="npm");let packageManager=JsPackageManagerFactory.getPackageManager({force:pkgMgr}),beforeVersion=await(0,import_telemetry2.getStorybookCoreVersion)();if(commandLog("Checking for latest versions of '@storybook/*' packages"),tag&&prerelease)throw new Error("Cannot set both --tag and --prerelease. Use --tag next to get the latest prereleae");let target="latest";prerelease?target="@next":tag&&(target=`@${tag}`);let flags=[];dryRun||flags.push("--upgrade"),flags.push("--target"),flags.push(target),flags=addExtraFlags(EXTRA_FLAGS,flags,packageManager.retrievePackageJson());let check=(0,import_cross_spawn4.sync)("npx",["npm-check-updates@latest","/storybook/",...flags],{stdio:"pipe",shell:!0}).output.toString();import_node_logger4.logger.info(check);let checkSb=(0,import_cross_spawn4.sync)("npx",["npm-check-updates@latest","sb",...flags],{stdio:"pipe",shell:!0}).output.toString();import_node_logger4.logger.info(checkSb),dryRun||(commandLog("Installing upgrades"),packageManager.installDependencies());let automigrationResults;if(skipCheck||(checkVersionConsistency(),automigrationResults=await automigrate({dryRun,yes,packageManager:pkgMgr})),!options.disableTelemetry){let afterVersion=await(0,import_telemetry2.getStorybookCoreVersion)();(0,import_telemetry2.telemetry)("upgrade",{prerelease,tag,automigrationResults,beforeVersion,afterVersion})}};async function upgrade(options){await(0,import_core_server2.withTelemetry)("upgrade",{cliOptions:options},()=>doUpgrade(options))}var import_prompts5=__toESM(require("prompts")),import_path14=__toESM(require("path")),import_chalk25=__toESM(require("chalk")),import_boxen2=__toESM(require("boxen")),import_ts_dedent25=require("ts-dedent"),import_giget=require("giget"),import_fs_extra11=require("fs-extra");var baseTemplates={"cra/default-js":{name:"Create React App (Javascript)",script:"npx create-react-app .",expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"cra/default-ts":{name:"Create React App (Typescript)",script:"npx create-react-app . --template typescript",skipTasks:["smoke-test"],expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"nextjs/12-js":{name:"Next.js v12 (JavaScript)",script:'yarn create next-app {{beforeDir}} -e https://github.com/vercel/next.js/tree/next-12-3-2/examples/hello-world && cd {{beforeDir}} && npm pkg set "dependencies.next"="^12.2.0" && yarn && git add . && git commit --amend --no-edit && cd ..',expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"nextjs/default-js":{name:"Next.js (JavaScript)",script:"yarn create next-app {{beforeDir}} --javascript --eslint",expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"nextjs/default-ts":{name:"Next.js (TypeScript)",script:"yarn create next-app {{beforeDir}} --typescript --eslint",expected:{framework:"@storybook/nextjs",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"react-vite/default-js":{name:"React Vite (JS)",script:"yarn create vite . --template react",expected:{framework:"@storybook/react-vite",renderer:"@storybook/react",builder:"@storybook/builder-vite"}},"react-vite/default-ts":{name:"React Vite (TS)",script:"yarn create vite . --template react-ts",expected:{framework:"@storybook/react-vite",renderer:"@storybook/react",builder:"@storybook/builder-vite"}},"react-webpack/18-ts":{name:"React 18 Webpack5 (TS)",script:"yarn create webpack5-react .",expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"react-webpack/17-ts":{name:"React 17 Webpack5 (TS)",script:'yarn create webpack5-react . --version-react="17" --version-react-dom="17"',expected:{framework:"@storybook/react-webpack5",renderer:"@storybook/react",builder:"@storybook/builder-webpack5"}},"solid-vite/default-js":{name:"SolidJS Vite (JS)",script:"npx degit solidjs/templates/js .",expected:{framework:"storybook-solidjs-vite",renderer:"storybook-solidjs",builder:"@storybook/builder-vite"},inDevelopment:!0},"solid-vite/default-ts":{name:"SolidJS Vite (TS)",script:"npx degit solidjs/templates/ts .",expected:{framework:"storybook-solidjs-vite",renderer:"storybook-solidjs",builder:"@storybook/builder-vite"},inDevelopment:!0},"vue3-vite/default-js":{name:"Vue3 Vite (JS)",script:"yarn create vite . --template vue",expected:{framework:"@storybook/vue3-vite",renderer:"@storybook/vue3",builder:"@storybook/builder-vite"}},"vue3-vite/default-ts":{name:"Vue3 Vite (TS)",script:"yarn create vite . --template vue-ts",expected:{framework:"@storybook/vue3-vite",renderer:"@storybook/vue3",builder:"@storybook/builder-vite"}},"vue2-vite/2.7-js":{name:"Vue2 Vite (vue 2.7 JS)",script:`yarn create vite . --template vanilla && yarn add --dev @vitejs/plugin-vue2 vue-template-compiler vue@2 && echo "import vue2 from '@vitejs/plugin-vue2';

export default {
	plugins: [vue2()]
};" > vite.config.js`,skipTasks:["smoke-test"],expected:{framework:"@storybook/vue-vite",renderer:"@storybook/vue",builder:"@storybook/builder-vite"}},"html-webpack/default":{name:"HTML Webpack5",script:"yarn create webpack5-html .",expected:{framework:"@storybook/html-webpack5",renderer:"@storybook/html",builder:"@storybook/builder-webpack5"}},"html-vite/default-js":{name:"HTML Vite JS",script:'yarn create vite . --template vanilla && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/html-vite",renderer:"@storybook/html",builder:"@storybook/builder-vite"}},"html-vite/default-ts":{name:"HTML Vite TS",script:'yarn create vite . --template vanilla-ts && echo "export default {}" > vite.config.js',expected:{framework:"@storybook/html-vite",renderer:"@storybook/html",builder:"@storybook/builder-vite"}},"svelte-vite/default-js":{name:"Svelte Vite (JS)",script:"yarn create vite . --template svelte",expected:{framework:"@storybook/svelte-vite",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"}},"svelte-vite/default-ts":{name:"Svelte Vite (TS)",script:"yarn create vite . --template svelte-ts",skipTasks:["smoke-test"],expected:{framework:"@storybook/svelte-vite",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"}},"angular-cli/default-ts":{name:"Angular CLI (latest)",script:"npx -p @angular/cli ng new angular-latest --directory . --routing=true --minimal=true --style=scss --strict --skip-git --skip-install --package-manager=yarn",expected:{framework:"@storybook/angular",renderer:"@storybook/angular",builder:"@storybook/builder-webpack5"}},"angular-cli/14-ts":{name:"Angular CLI (Version 14)",script:"npx -p @angular/cli@14 ng new angular-v14 --directory . --routing=true --minimal=true --style=scss --strict --skip-git --skip-install --package-manager=yarn",expected:{framework:"@storybook/angular",renderer:"@storybook/angular",builder:"@storybook/builder-webpack5"}},"svelte-kit/skeleton-js":{name:"Svelte Kit (JS)",script:"yarn create svelte-with-args --name=svelte-kit/skeleton-js --directory=. --template=skeleton --types=null --no-prettier --no-eslint --no-playwright --no-vitest",expected:{framework:"@storybook/sveltekit",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"}},"svelte-kit/skeleton-ts":{name:"Svelte Kit (TS)",script:"yarn create svelte-with-args --name=svelte-kit/skeleton-ts --directory=. --template=skeleton --types=typescript --no-prettier --no-eslint --no-playwright --no-vitest",expected:{framework:"@storybook/sveltekit",renderer:"@storybook/svelte",builder:"@storybook/builder-vite"}},"lit-vite/default-js":{name:"Lit Vite (JS)",script:"yarn create vite . --template lit",skipTasks:["smoke-test"],expected:{framework:"@storybook/web-components-vite",renderer:"@storybook/web-components",builder:"@storybook/builder-vite"}},"lit-vite/default-ts":{name:"Lit Vite (TS)",script:"yarn create vite . --template lit-ts",skipTasks:["smoke-test"],expected:{framework:"@storybook/web-components-vite",renderer:"@storybook/web-components",builder:"@storybook/builder-vite"}},"vue-cli/default-js":{name:"Vue-CLI (Default JS)",script:"npx -p @vue/cli vue create . --default --packageManager=yarn --force --merge",skipTasks:["smoke-test"],expected:{framework:"@storybook/vue3-webpack5",renderer:"@storybook/vue3",builder:"@storybook/builder-webpack5"}},"vue-cli/vue2-default-js":{name:"Vue-CLI (Vue2 JS)",script:'npx -p @vue/cli vue create . --default --packageManager=yarn --force --merge --preset="Default (Vue 2)"',skipTasks:["smoke-test"],expected:{framework:"@storybook/vue-webpack5",renderer:"@storybook/vue",builder:"@storybook/builder-webpack5"}},"preact-webpack5/default-js":{name:"Preact CLI (Default JS)",script:"npx preact-cli create default {{beforeDir}} --name preact-app --yarn --no-install",expected:{framework:"@storybook/preact-webpack5",renderer:"@storybook/preact",builder:"@storybook/builder-webpack5"}},"preact-webpack5/default-ts":{name:"Preact CLI (Default TS)",script:"npx preact-cli create typescript {{beforeDir}} --name preact-app --yarn --no-install",expected:{framework:"@storybook/preact-webpack5",renderer:"@storybook/preact",builder:"@storybook/builder-webpack5"}},"preact-vite/default-js":{name:"Preact Vite (JS)",script:"yarn create vite . --template preact",expected:{framework:"@storybook/preact-vite",renderer:"@storybook/preact",builder:"@storybook/builder-vite"}},"preact-vite/default-ts":{name:"Preact Vite (TS)",script:"yarn create vite . --template preact-ts",expected:{framework:"@storybook/preact-vite",renderer:"@storybook/preact",builder:"@storybook/builder-vite"}},"qwik-vite/default-ts":{name:"Qwik CLI (Default TS)",script:"yarn create qwik basic {{beforeDir}} --no-install",skipTasks:["e2e-tests"],inDevelopment:!0,expected:{framework:"storybook-framework-qwik",renderer:"storybook-framework-qwik",builder:"storybook-framework-qwik"}}},internalTemplates={"internal/ssv6-vite":{...baseTemplates["react-vite/default-ts"],name:"StoryStore v6 (react-vite/default-ts)",isInternal:!0,modifications:{mainConfig:{features:{storyStoreV7:!1}}}},"internal/ssv6-webpack":{...baseTemplates["react-webpack/18-ts"],name:"StoryStore v6 (react-webpack/18-ts)",isInternal:!0,modifications:{mainConfig:{features:{storyStoreV7:!1}}}}},allTemplates={...baseTemplates,...internalTemplates},ci=["cra/default-ts","react-vite/default-ts"],pr=[...ci,"angular-cli/default-ts","vue3-vite/default-ts","vue-cli/vue2-default-js","lit-vite/default-ts","svelte-vite/default-ts","svelte-kit/skeleton-ts","nextjs/default-ts"],merged=[...pr,"react-webpack/18-ts","react-webpack/17-ts","angular-cli/14-ts","preact-webpack5/default-ts","preact-vite/default-ts","html-webpack/default","html-vite/default-ts","internal/ssv6-vite","internal/ssv6-webpack"],daily=[...merged,"cra/default-js","react-vite/default-js","vue3-vite/default-js","vue2-vite/2.7-js","vue-cli/default-js","lit-vite/default-js","svelte-kit/skeleton-js","svelte-vite/default-js","nextjs/12-js","nextjs/default-js","qwik-vite/default-ts","preact-webpack5/default-js","preact-vite/default-js","html-vite/default-js"];var logger24=console,toChoices=c=>({title:allTemplates[c].name,value:c}),sandbox=async({output:outputDirectory,filterValue,branch,init})=>{let selectedConfig=allTemplates[filterValue],selectedTemplate=selectedConfig?filterValue:null;if(!selectedConfig){let filterRegex=new RegExp(`^${filterValue||""}`,"i"),keys=Object.keys(allTemplates),choices=keys.reduce((acc,group)=>{let current=allTemplates[group];return(!filterValue||current.name.match(filterRegex)||group.match(filterRegex)||current.expected.builder.match(filterRegex)||current.expected.framework.match(filterRegex)||current.expected.renderer.match(filterRegex))&&acc.push(group),acc},[]);if(choices.length===0&&(logger24.info((0,import_boxen2.default)(import_ts_dedent25.dedent`
            🔎 You filtered out all templates. 🔍

            After filtering all the templates with "${import_chalk25.default.yellow(filterValue)}", we found no results. Please try again with a different filter.

            Available templates:
            ${keys.map(key=>import_chalk25.default.blue`- ${key}`).join(`
`)}
            `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"})),process.exit(1)),choices.length===1?[selectedTemplate]=choices:(logger24.info((0,import_boxen2.default)(import_ts_dedent25.dedent`
            🤗 Welcome to ${import_chalk25.default.yellow("sb sandbox")}! 🤗

            Create a ${import_chalk25.default.green("new project")} to minimally reproduce Storybook issues.

            1. select an environment that most closely matches your project setup.
            2. select a location for the reproduction, outside of your project.

            After the reproduction is ready, we'll guide you through the next steps.
            `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"})),selectedTemplate=await promptSelectedTemplate(choices)),!!!(selectedTemplate??null)){logger24.error("Somehow we got no templates. Please rerun this command!");return}if(selectedConfig=allTemplates[selectedTemplate],!selectedConfig)throw new Error("\u{1F6A8} Sandbox: please specify a valid template type")}let selectedDirectory=outputDirectory,outputDirectoryName=outputDirectory||selectedTemplate;if(selectedDirectory&&(0,import_fs_extra11.existsSync)(`${selectedDirectory}`)&&logger24.info(`\u26A0\uFE0F  ${selectedDirectory} already exists! Overwriting...`),!selectedDirectory){let{directory}=await(0,import_prompts5.default)({type:"text",message:"Enter the output directory",name:"directory",initial:outputDirectoryName,validate:async directoryName=>(0,import_fs_extra11.existsSync)(directoryName)?`${directoryName} already exists. Please choose another name.`:!0},{onCancel:()=>{logger24.log("Command cancelled by the user. Exiting..."),process.exit(1)}});selectedDirectory=directory}try{let templateDestination=import_path14.default.isAbsolute(selectedDirectory)?selectedDirectory:import_path14.default.join(process.cwd(),selectedDirectory);logger24.info(`\u{1F3C3} Adding ${selectedConfig.name} into ${templateDestination}`),logger24.log("\u{1F4E6} Downloading sandbox template...");try{let gitPath=`github:storybookjs/sandboxes/${selectedTemplate}/${init?"after-storybook":"before-storybook"}#${branch}`;if(await(0,import_giget.downloadTemplate)(gitPath,{force:!0,dir:templateDestination}),(await(0,import_fs_extra11.readdir)(templateDestination)).length===0)throw new Error(import_ts_dedent25.dedent`Template downloaded from ${import_chalk25.default.blue(gitPath)} is empty.
          Are you use it exists? Or did you want to set ${import_chalk25.default.yellow(selectedTemplate)} to inDevelopment first?`)}catch(err){throw logger24.error(`\u{1F6A8} Failed to download sandbox template: ${err.message}`),err}let initMessage=init?import_chalk25.default.yellow(`yarn install
yarn storybook`):`Recreate your setup, then ${import_chalk25.default.yellow("run npx storybook init")}`;logger24.info((0,import_boxen2.default)(import_ts_dedent25.dedent`
        🎉 Your Storybook reproduction project is ready to use! 🎉

        ${import_chalk25.default.yellow(`cd ${selectedDirectory}`)}
        ${initMessage}

        Once you've recreated the problem you're experiencing, please:

        1. Document any additional steps in ${import_chalk25.default.cyan("README.md")}
        2. Publish the repository to github
        3. Link to the repro repository in your issue

        Having a clean repro helps us solve your issue faster! 🙏
      `.trim(),{borderStyle:"round",padding:1,borderColor:"#F1618C"}))}catch(error){throw logger24.error("\u{1F6A8} Failed to create sandbox"),error}};async function promptSelectedTemplate(choices){let{template}=await(0,import_prompts5.default)({type:"select",message:"\u{1F308} Select the template",name:"template",choices:choices.map(toChoices)},{onCancel:()=>{logger24.log("Command cancelled by the user. Exiting..."),process.exit(1)}});return template||null}var import_fs_extra12=__toESM(require("fs-extra")),import_path15=__toESM(require("path")),import_cross_spawn5=require("cross-spawn"),import_node_logger5=require("@storybook/node-logger"),import_shelljs=__toESM(require("shelljs")),import_chalk26=__toESM(require("chalk")),exec=async(command2,options={},{startMessage,errorMessage,dryRun}={})=>{if(startMessage&&import_node_logger5.logger.info(startMessage),dryRun){import_node_logger5.logger.info(`
> ${command2}
`);return}return import_node_logger5.logger.info(command2),new Promise((resolve,reject)=>{let defaultOptions2={silent:!1},child=import_shelljs.default.exec(command2,{...defaultOptions2,...options,async:!0,silent:!1});child.stderr.pipe(process.stderr),child.on("exit",code=>{code===0?resolve(void 0):(import_node_logger5.logger.error(import_chalk26.default.red(`An error occurred while executing: \`${command2}\``)),import_node_logger5.logger.info(errorMessage),reject(new Error(`command exited with code: ${code}: `)))})})},link=async({target,local,start})=>{var _a;let storybookDir=process.cwd();try{if((await import_fs_extra12.default.readJSON("package.json")).name!=="@storybook/root")throw new Error}catch{throw new Error("Expected to run link from the root of the storybook monorepo")}let reproDir=target,reproName=import_path15.default.basename(target);if(!local){let reprosDir=import_path15.default.join(storybookDir,"../storybook-repros");import_node_logger5.logger.info(`Ensuring directory ${reprosDir}`),await import_fs_extra12.default.ensureDir(reprosDir),import_node_logger5.logger.info(`Cloning ${target}`),await exec(`git clone ${target}`,{cwd:reprosDir}),reproName=import_path15.default.basename(target,import_path15.default.extname(target)),reproDir=import_path15.default.join(reprosDir,reproName)}let reproPackageJson=await import_fs_extra12.default.readJSON(import_path15.default.join(reproDir,"package.json")),version=(0,import_cross_spawn5.sync)("yarn",["--version"],{cwd:reproDir,stdio:"pipe",shell:!0}).stdout.toString();if(!/^[23]\./.test(version)){import_node_logger5.logger.warn(`\u{1F6A8} Expected yarn 2 or 3 in ${reproDir}!`),import_node_logger5.logger.warn(""),import_node_logger5.logger.warn("Please set it up with `yarn set version berry`,"),import_node_logger5.logger.warn(`then link '${reproDir}' with the '--local' flag.`);return}import_node_logger5.logger.info(`Linking ${reproDir}`),await exec(`yarn link --all ${storybookDir}`,{cwd:reproDir}),import_node_logger5.logger.info(`Installing ${reproName}`),await exec("yarn install",{cwd:reproDir}),(_a=reproPackageJson.devDependencies)!=null&&_a.vite||(import_node_logger5.logger.info("Magic stuff related to @storybook/preset-create-react-app, we need to fix peerDependencies"),await exec("yarn add -D webpack-hot-middleware",{cwd:reproDir})),await exec("yarn add @types/node@16",{cwd:reproDir}),start&&(import_node_logger5.logger.info(`Running ${reproName} storybook`),await exec("yarn run storybook",{cwd:reproDir}))};var import_ts_dedent26=require("ts-dedent"),import_read_pkg_up=require("read-pkg-up"),import_node_logger6=require("@storybook/node-logger"),import_core_server3=require("@storybook/core-server"),import_core_common16=require("@storybook/core-common"),dev=async cliOptions=>{var _a;process.env.NODE_ENV=process.env.NODE_ENV||"development";try{let options={...cliOptions,configDir:cliOptions.configDir||"./.storybook",configType:"DEVELOPMENT",ignorePreview:!!cliOptions.previewUrl&&!cliOptions.forceBuildPreview,cache:import_core_common16.cache,packageJson:(0,import_read_pkg_up.sync)({cwd:__dirname}).packageJson};await(0,import_core_server3.withTelemetry)("dev",{cliOptions,presetOptions:options},()=>(0,import_core_server3.buildDevStandalone)(options))}catch(error){import_node_logger6.instance.heading="",error instanceof Error?error.error?import_node_logger6.logger.error(error.error):error.stats&&error.stats.compilation.errors?error.stats.compilation.errors.forEach(e=>import_node_logger6.logger.plain(e)):import_node_logger6.logger.error(error):(_a=error.compilation)!=null&&_a.errors&&error.compilation.errors.forEach(e=>import_node_logger6.logger.plain(e)),import_node_logger6.logger.line(),import_node_logger6.logger.warn(error.close?import_ts_dedent26.dedent`
          FATAL broken build!, will close the process,
          Fix the error below and restart storybook.
        `:import_ts_dedent26.dedent`
          Broken build, fix the error above.
          You may need to refresh the browser.
        `),import_node_logger6.logger.line(),process.exit(1)}};var import_read_pkg_up2=require("read-pkg-up"),import_node_logger7=require("@storybook/node-logger"),import_core_server4=require("@storybook/core-server"),import_core_common17=require("@storybook/core-common"),build=async cliOptions=>{try{let options={...cliOptions,configDir:cliOptions.configDir||"./.storybook",outputDir:cliOptions.outputDir||"./storybook-static",ignorePreview:!!cliOptions.previewUrl&&!cliOptions.forceBuildPreview,configType:"PRODUCTION",cache:import_core_common17.cache,packageJson:(0,import_read_pkg_up2.sync)({cwd:__dirname}).packageJson};await(0,import_core_server4.withTelemetry)("build",{cliOptions,presetOptions:options},()=>(0,import_core_server4.buildStaticStandalone)(options))}catch(err){import_node_logger7.logger.error(err),process.exit(1)}};function parseList(str){return str.split(",").map(item=>item.trim()).filter(item=>item.length>0)}function getEnvConfig(program2,configEnv){Object.keys(configEnv).forEach(fieldName=>{let envVarName=configEnv[fieldName],envVarValue=process.env[envVarName];envVarValue&&(program2[fieldName]=envVarValue)})}var pkg=(0,import_read_pkg_up3.sync)({cwd:__dirname}).packageJson,consoleLogger=console,command=name=>import_commander.default.command(name).option("--disable-telemetry","disable sending telemetry data",process.env.STORYBOOK_DISABLE_TELEMETRY&&process.env.STORYBOOK_DISABLE_TELEMETRY!=="false").option("--debug","Get more logs in debug mode",!1).option("--enable-crash-reports","enable sending crash reports to telemetry data");command("init").description("Initialize Storybook into your project.").option("-f --force","Force add Storybook").option("-s --skip-install","Skip installing deps").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing deps").option("-N --use-npm","Use npm to install deps (deprecated)").option("--use-pnp","Enable pnp mode for Yarn 2+").option("-p --parser <babel | babylon | flow | ts | tsx>","jscodeshift parser").option("-t --type <type>","Add Storybook for a specific project type").option("-y --yes","Answer yes to all prompts").option("-b --builder <webpack5 | vite>","Builder library").option("-l --linkable","Prepare installation for link (contributor helper)").action(options=>{initiate(options,pkg).catch(err=>{import_node_logger8.logger.error(err),process.exit(1)})});command("add <addon>").description("Add an addon to your Storybook").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing dependencies").option("-N --use-npm","Use NPM to install dependencies (deprecated)").option("-s --skip-postinstall","Skip package specific postinstall config modifications").action((addonName,options)=>add(addonName,options));command("babelrc").description("generate the default storybook babel config into your current working directory").action(()=>generateStorybookBabelConfigInCWD());command("upgrade").description("Upgrade your Storybook packages to the latest").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager for installing dependencies").option("-N --use-npm","Use NPM to install dependencies (deprecated)").option("-y --yes","Skip prompting the user").option("-n --dry-run","Only check for upgrades, do not install").option("-t --tag <tag>","Upgrade to a certain npm dist-tag (e.g. next, prerelease)").option("-p --prerelease","Upgrade to the pre-release packages").option("-s --skip-check","Skip postinstall version and automigration checks").action(options=>upgrade(options));command("info").description("Prints debugging information about the local environment").action(()=>{consoleLogger.log(import_chalk27.default.bold(`
Environment Info:`)),import_envinfo.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Edge","Firefox","Safari"],npmPackages:"@storybook/*",npmGlobalPackages:"@storybook/*"}).then(consoleLogger.log)});command("migrate [migration]").description("Run a Storybook codemod migration on your source files").option("-l --list","List available migrations").option("-g --glob <glob>","Glob for files upon which to apply the migration","**/*.js").option("-p --parser <babel | babylon | flow | ts | tsx>","jscodeshift parser").option("-n --dry-run","Dry run: verify the migration exists and show the files to which it will be applied").option("-r --rename <from-to>",'Rename suffix of matching files after codemod has been applied, e.g. ".js:.ts"').action((migration,{configDir,glob,dryRun,list,rename,parser})=>{migrate(migration,{configDir,glob,dryRun,list,rename,parser,logger:consoleLogger}).catch(err=>{import_node_logger8.logger.error(err),process.exit(1)})});command("extract [location] [output]").description("extract stories.json from a built version").action((location="storybook-static",output=import_path16.default.join(location,"stories.json"))=>extract(location,output).catch(e=>{import_node_logger8.logger.error(e),process.exit(1)}));command("sandbox [filterValue]").alias("repro").description("Create a sandbox from a set of possible templates").option("-o --output <outDir>","Define an output directory").option("-b --branch <branch>","Define the branch to download from","next").option("--no-init","Whether to download a template without an initialized Storybook",!1).action((filterValue,options)=>sandbox({filterValue,...options}).catch(e=>{import_node_logger8.logger.error(e),process.exit(1)}));command("link <repo-url-or-directory>").description("Pull down a repro from a URL (or a local directory), link it, and run storybook").option("--local","Link a local directory already in your file system").option("--no-start","Start the storybook",!0).action((target,{local,start})=>link({target,local,start}).catch(e=>{import_node_logger8.logger.error(e),process.exit(1)}));command("automigrate [fixId]").description("Check storybook for known problems or migrations and apply fixes").option("-y --yes","Skip prompting the user").option("-n --dry-run","Only check for fixes, do not actually run them").option("--package-manager <npm|pnpm|yarn1|yarn2>","Force package manager").option("-N --use-npm","Use npm as package manager (deprecated)").option("-l --list","List available migrations").action(async(fixId3,options)=>{await automigrate({fixId:fixId3,...options}).catch(e=>{import_node_logger8.logger.error(e),process.exit(1)})});command("dev").option("-p, --port <number>","Port to run Storybook",str=>parseInt(str,10)).option("-h, --host <string>","Host to run Storybook").option("-s, --static-dir <dir-names>","Directory where to load static files from",parseList).option("-c, --config-dir <dir-name>","Directory where to load Storybook configurations from").option("--https","Serve Storybook over HTTPS. Note: You must provide your own certificate information.").option("--ssl-ca <ca>","Provide an SSL certificate authority. (Optional with --https, required if using a self-signed certificate)",parseList).option("--ssl-cert <cert>","Provide an SSL certificate. (Required with --https)").option("--ssl-key <key>","Provide an SSL key. (Required with --https)").option("--smoke-test","Exit after successful start").option("--ci","CI mode (skip interactive prompts, don't open browser)").option("--no-open","Do not open Storybook automatically in the browser").option("--loglevel <level>","Control level of logging during build").option("--quiet","Suppress verbose build output").option("--no-version-updates","Suppress update check",!0).option("--no-release-notes","Suppress automatic redirects to the release notes after upgrading",!0).option("--debug-webpack","Display final webpack configurations for debugging purposes").option("--webpack-stats-json [directory]","Write Webpack Stats JSON to disk").option("--preview-url <string>","Disables the default storybook preview and lets your use your own").option("--force-build-preview","Build the preview iframe even if you are using --preview-url").option("--docs","Build a documentation-only site using addon-docs").action(options=>{import_node_logger8.logger.setLevel(import_commander.default.loglevel),consoleLogger.log(import_chalk27.default.bold(`${pkg.name} v${pkg.version}`)+import_chalk27.default.reset(`
`)),getEnvConfig(import_commander.default,{port:"SBCONFIG_PORT",host:"SBCONFIG_HOSTNAME",staticDir:"SBCONFIG_STATIC_DIR",configDir:"SBCONFIG_CONFIG_DIR",ci:"CI"}),typeof import_commander.default.port=="string"&&import_commander.default.port.length>0&&(import_commander.default.port=parseInt(import_commander.default.port,10)),dev({...options,packageJson:pkg})});command("build").option("-s, --static-dir <dir-names>","Directory where to load static files from",parseList).option("-o, --output-dir <dir-name>","Directory where to store built files").option("-c, --config-dir <dir-name>","Directory where to load Storybook configurations from").option("--quiet","Suppress verbose build output").option("--loglevel <level>","Control level of logging during build").option("--debug-webpack","Display final webpack configurations for debugging purposes").option("--webpack-stats-json [directory]","Write Webpack Stats JSON to disk").option("--preview-url <string>","Disables the default storybook preview and lets your use your own").option("--force-build-preview","Build the preview iframe even if you are using --preview-url").option("--docs","Build a documentation-only site using addon-docs").action(options=>{process.env.NODE_ENV=process.env.NODE_ENV||"production",import_node_logger8.logger.setLevel(import_commander.default.loglevel),consoleLogger.log(import_chalk27.default.bold(`${pkg.name} v${pkg.version}
`)),getEnvConfig(import_commander.default,{staticDir:"SBCONFIG_STATIC_DIR",outputDir:"SBCONFIG_OUTPUT_DIR",configDir:"SBCONFIG_CONFIG_DIR"}),build({...options,packageJson:pkg})});import_commander.default.on("command:*",([invalidCmd])=>{consoleLogger.error(` Invalid command: %s.
 See --help for a list of available commands.`,invalidCmd);let suggestion=import_commander.default.commands.map(cmd=>cmd._name).find(cmd=>(0,import_leven.default)(cmd,invalidCmd)<3);suggestion&&consoleLogger.info(`
 Did you mean ${suggestion}?`),process.exit(1)});import_commander.default.usage("<command> [options]").version(pkg.version).parse(process.argv);
