{"version":3,"file":"AzButton-stories-mdx.iframe.bundle.js","mappingsrGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACprsources":["webpack://@az-digital/az-web-components/./stories/AzButton.stories.mdx","webpack://@az-digital/az-web-components/./components/AzButton/index.js","webpack://@az-digital/az-web-components/./components/AzButton/style.js","webpack://@az-digital/az-web-components/./mixins/delegate-focus-mixin.js","webpack://@az-digital/az-web-components/./mixins/shadow-events-datalayer.js"],"sourcesContent":["\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport { html } from \"lit-html\";\nimport { Meta, Story, Canvas } from '@storybook/addon-docs/blocks';\nimport AzButton from '../components/AzButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, { ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {})\n  }) : _createMdxContent();\n\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\"\n    }, _provideComponents(), props.components);\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Meta, {\n        title: \"AzButton\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n        id: \"buttons\",\n        children: \"Buttons\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n        name: \"link buttons\",\n        args: {\n          value: 'this is a link'\n        },\n        children: ({\n          value\n        }) => html`<az-button link='https://www.arizona.edu'>${value}</az-button>`\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Or just use it without link value\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"click buttons\",\n          args: {\n            value: 'this is a button'\n          },\n          parameters: {\n            controls: {\n              hideNoControlsWarning: true\n            }\n          },\n          children: ({\n            value\n          }) => html`<az-button>${value}</az-button>`\n        })\n      })]\n    });\n  }\n}\n/* ========= */\n\n\nexport const linkButtons = ({\n  value\n}) => html`<az-button link='https://www.arizona.edu'>${value}</az-button>`;\nlinkButtons.storyName = 'link buttons';\nlinkButtons.args = {\n  value: \"this is a link\"\n};\nlinkButtons.parameters = {\n  storySource: {\n    source: '({\\n  value\\n}) => html`<az-button link=\\'https://www.arizona.edu\\'>${value}</az-button>`'\n  }\n};\nexport const clickButtons = ({\n  value\n}) => html`<az-button>${value}</az-button>`;\nclickButtons.storyName = 'click buttons';\nclickButtons.args = {\n  value: \"this is a button\"\n};\nclickButtons.parameters = {\n  storySource: {\n    source: '({\\n  value\\n}) => html`<az-button>${value}</az-button>`'\n  },\n  ...{\n    controls: {\n      hideNoControlsWarning: true\n    }\n  }\n};\nconst componentMeta = {\n  title: 'AzButton',\n  tags: ['stories-mdx'],\n  includeStories: [\"linkButtons\", \"clickButtons\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = { ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","import { LitElement, html } from 'lit-element';\nimport { eventDataLayerPush } from '../../mixins/shadow-events-datalayer';\nimport { DelegateFocusMixin } from '../../mixins/delegate-focus-mixin';\nimport azButtonStyles from './style';\n\nexport default class AzButton extends DelegateFocusMixin(LitElement) {\n  static get properties() {\n    return {\n      /**\n      * Set to URL to render <a> element styled as button.\n      */\n      link: {\n        type: String,\n        reflect: true,\n      },\n      target: {\n        type: String,\n        reflect: true,\n      },\n      toggle: {\n        type: String,\n        reflect: true,\n      },\n      event: {\n        type: String,\n        reflect: true,\n      },\n      elmid: {\n        type: String,\n        reflect: true,\n      },\n      value: {\n        type: String,\n        reflect: true,\n      },\n    };\n  }\n\n  static get styles() {\n    return [azButtonStyles];\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    super.attributeChangedCallback(name, oldVal, newVal);\n  }\n\n  changeAttributes() {\n    this.setAttribute('closed', 'true');\n    this.setAttribute('aria-expanded', 'true');\n    this.requestUpdate();\n  }\n\n  handleClick(e) {\n    eventDataLayerPush(e, '');\n    if (this.event) {\n      const event = new Event(this.event);\n      document.querySelector(this.target).dispatchEvent(event);\n    } else {\n      const openAzOffCanvasMenu = new Event('open-az-offcanvas-menu');\n      document.querySelector(this.target).dispatchEvent(openAzOffCanvasMenu);\n    }\n  }\n\n  render() {\n    return html`\n      ${this.link\n    ? html`<a class=\"button\" href=\"${this.link}\" ?disabled=\"${this.disabled}\" @click=\"${eventDataLayerPush}\" id=\"${this.elmid}\">${this.value}<slot></slot></a>`\n    : html`<button type=\"button\" class=\"button\" ?disabled=\"${this.disabled}\" role=\"presentation\" @click=\"${this.handleClick}\" id=\"${this.elmid}\">${this.value}<slot></slot></button>`}\n    `;\n  }\n\n  firstUpdated() {\n    super.firstUpdated();\n    this.setAttribute('role', 'button');\n  }\n\n  /**\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('.button');\n  }\n}\n\ncustomElements.get('az-button') || customElements.define('az-button', AzButton);\n","import { css } from 'lit-element';\n\nexport default css`\n     @import url(\"https://use.typekit.net/emv3zbo.css\");\n     @import url(\"https://cdn.digital.arizona.edu/lib/az-icons/main/az-icons-styles.css\");\n\n    .button {\n        display: inline-block;\n        padding: 0.375rem 0.75rem;\n        font-size: 1rem;\n        font-weight: 400;\n        line-height: 1.5;\n        text-align: center;\n        text-decoration: none;\n        vertical-align: middle;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        border-style: solid;\n        border-width: 1px;\n        border-radius: 0;\n        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n        display: inline-block;\n        margin-bottom: 0;\n        font-weight: 700;\n        text-align: center;\n        white-space: nowrap;\n        vertical-align: middle;\n        -ms-touch-action: manipulation;\n        touch-action: manipulation;\n        cursor: pointer;\n        background-image: none;\n        border: 1px solid transparent;\n        padding: 6px 12px;\n        font-size: 16px;\n        line-height: 1.5;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        font-weight: 500;\n        text-transform: uppercase;\n        text-decoration: none;\n        letter-spacing: .04em;\n        white-space: normal;\n        border-width: 2px;\n        border-color: transparent;\n    }\n    .button:hover {\n        text-decoration: none;\n    }\n    .button:focus {\n        outline: 0;\n        box-shadow: 0 0 0 0;\n    }\n    .button[disabled] {\n        pointer-events: none;\n        opacity: 0.65;\n    }\n    @media (prefers-reduced-motion: reduce) {\n        .button {\n            transition: none;\n        }\n    }\n    :host {\n        outline: none;\n        margin-right: 4px;\n        font-family: inherit;\n    }\n    :host([size=\"large\"]) .button {\n        padding: 0.5rem 1rem;\n        font-size: 1.25rem;\n        line-height: 1.5;\n        border-radius: 0.3rem;\n    }\n    :host([size=\"small\"]) .button {\n        padding: 0.25rem 0.5rem;\n        font-size: 0.875rem;\n        line-height: 1.5;\n        border-radius: 0.2rem;\n    }\n    :host([block]){\n        display: block;\n    }\n    :host([block]) .button {\n        display: block;\n        width: 100%;\n        padding: 6px 0;\n    }\n    :host([redbar]),\n    :host([redbar]) .button {\n        width: 60px;\n        height: 50px;\n        display: inline-block;\n    }\n    :host([redbar]) ::slotted(svg) {\n        margin: -5px 0 0 0;\n        font-size: 24px;\n        line-height: 24px;\n    }\n    :host([theme=\"primary\"]) .button {\n        color: #fff;\n        background-color: #8b0015;\n    }\n    :host([theme=\"primary\"]) .button:hover,\n    :host([theme=\"primary\"]) .button:focus {\n        border-color: transparent;\n        background-color: #ab0520;\n    }\n    :host([theme=\"primary\"][outline]) .button {\n        color: #8b0015;\n        border-color: #8b0015;\n        background-color: transparent;\n    }\n    :host([theme=\"primary\"][outline]) .button:hover,\n    :host([theme=\"primary\"][outline]) .button:focus {\n        color: #fff;\n        background-color: #8b0015;\n        border-color: #8b0015;\n    }\n    :host([theme=\"primary\"][outline]) .button[disabled] {\n        background-color: transparent;\n    }\n    :host([theme=\"az-red\"]) .button,\n    :host([theme=\"red\"]) .button {\n        color: #fff;\n        background-color: #ab0520;\n    }\n    :host([theme=\"red\"]) .button:hover,\n    :host([theme=\"red\"]) .button:focus,\n    :host([theme=\"az-red\"]) .button:hover,\n    :host([theme=\"az-red\"]) .button:focus {\n        border-color: transparent;\n        background-color: #8b0015;\n    }\n    :host([theme=\"az-red\"][outline]) .button,\n    :host([theme=\"red\"][outline]) .button {\n        color: #8b0015;\n        border-color: #8b0015;\n        background-color: transparent;\n    }\n    :host([theme=\"az-red\"][outline]) .button:hover,\n    :host([theme=\"az-red\"][outline]) .button:focus,\n    :host([theme=\"red\"][outline]) .button:hover,\n    :host([theme=\"red\"][outline]) .button:focus {\n        color: #fff;\n        background-color: #8b0015;\n        border-color: #8b0015;\n    }\n    // Bloom\n    :host([theme=\"bloom\"]) .button {\n        color: #fff;\n        background-color: #8b0015;\n    }\n    :host([theme=\"bloom\"]) .button:hover,\n    :host([theme=\"bloom\"]) .button:focus {\n        border-color: transparent;\n        background-color: #ab0520;\n    }\n    // Bloom Outline\n    :host([theme=\"bloom\"][outline]) .button {\n        color: white;\n        border-color: rgb(239, 64, 86) !important;\n        background-color: transparent;\n    }\n    :host([theme=\"bloom\"][outline]) .button:hover,\n    :host([theme=\"bloom\"][outline]) .button:focus {\n        color: white;\n        background-color: rgb(139, 0, 21) !important;\n        border-color: rgb(139, 0, 21) !important;\n    }\n    :host([theme=\"bloom\"][outline]) .button[disabled] {\n        background-color: transparent;\n    }\n    ::slotted(.icon-text) {\n        display: block;\n        margin: -5px;\n        font-size: 10px;\n        line-height: 10px;\n    }\n`;\n","const $$tabindex = Symbol('tabindex');\nconst $$oldTabindex = Symbol('oldTabindex');\nconst $$newTabindex = Symbol('newTabindex');\n\nexport const DelegateFocusMixin = superClass =>\n  class extends superClass {\n    static get properties() {\n      return {\n        tabIndex: {\n          converter: {\n            fromAttribute: Number,\n            toAttribute: value => (value == null ? null : value.toString())\n          },\n          noAccessor: true,\n          reflect: true\n        },\n\n        /**\n         * If true, the user cannot interact with this element.\n         */\n        disabled: {\n          type: Boolean,\n          reflect: true\n        }\n      };\n    }\n\n    constructor() {\n      super();\n      if (!this.hasAttribute('tabindex')) {\n        this.tabIndex = 0;\n      }\n    }\n\n    get tabIndex() {\n      return this[$$tabindex];\n    }\n\n    set tabIndex(value) {\n      const oldValue = this[$$tabindex];\n      this[$$tabindex] = value;\n      this.requestUpdate('tabIndex', oldValue);\n    }\n\n    firstUpdated() {\n      this.addEventListener('focusin', e => {\n        if (e.composedPath()[0] === this) {\n          this._focus();\n        }\n      });\n\n      this.addEventListener('keydown', e => {\n        if (!e.defaultPrevented && e.shiftKey && e.keyCode === 9) {\n          // Flag is checked in _focus event handler.\n          this._isShiftTabbing = true;\n          HTMLElement.prototype.focus.apply(this);\n          // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n          setTimeout(() => {\n            this._isShiftTabbing = false;\n          }, 0);\n        }\n      });\n    }\n\n    update(props) {\n      if (props.has('disabled')) {\n        this._disabledChanged(this.disabled, props.get('disabled'));\n      }\n\n      if (props.has('tabIndex')) {\n        // save value of tabindex, as it can be overridden to\n        // undefined in case if the element is disabled\n        this[$$newTabindex] = this.tabIndex;\n        this._tabIndexChanged(this.tabIndex);\n      }\n\n      super.update(props);\n    }\n\n    updated(props) {\n      super.updated(props);\n\n      if (props.has('disabled')) {\n        this.focusElement.disabled = this.disabled;\n        if (this.disabled) {\n          this.blur();\n        }\n      }\n\n      if (props.has('tabIndex') && this[$$newTabindex] !== undefined) {\n        this.focusElement.tabIndex = this[$$newTabindex];\n        this[$$newTabindex] = undefined;\n      }\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the actual focusable element in the component.\n     */\n    get focusElement() {\n      window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n      return this;\n    }\n\n    _focus() {\n      if (this._isShiftTabbing) {\n        return;\n      }\n\n      this.focusElement.focus();\n    }\n\n    /**\n     * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n     * @protected\n     */\n    focus() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.focusElement.focus();\n    }\n\n    /**\n     * Native bluring in the host element does nothing because it does not have the focus.\n     * In chrome it works, but not in FF.\n     * @protected\n     */\n    blur() {\n      this.focusElement.blur();\n    }\n\n    _disabledChanged(disabled, oldDisabled) {\n      if (disabled) {\n        this[$$oldTabindex] = this.tabIndex;\n        this.tabIndex = -1;\n        this.setAttribute('aria-disabled', 'true');\n      } else if (oldDisabled) {\n        if (this[$$oldTabindex] !== undefined) {\n          this.tabIndex = this[$$oldTabindex];\n        }\n        this.removeAttribute('aria-disabled');\n      }\n    }\n\n    _tabIndexChanged(tabindex) {\n      if (this.disabled && tabindex) {\n        // If tabindex attribute was changed while checkbox was disabled\n        if (this.tabIndex !== -1) {\n          this[$$oldTabindex] = this.tabIndex;\n        }\n        this.tabIndex = null;\n      }\n    }\n  };\n","export const eventDataLayerPush = (e, location = '') => {\t\n\t// Add window.dataLayer if doesnt exist\n\twindow.dataLayer = window.dataLayer || [];\n\t// Fetch reference to the element that was actually clicked\n\tvar targetElement = e.composedPath()[0];\n\t// Fetch reference to the element's parent dropdown which was clicked\n\tvar parentDropDown = e.composedPath()[3].innerText ? e.composedPath()[3].innerText.split(\"\\n\")[0] : '';\n\t\n\twindow.dataLayer.push({\n\t\tevent: 'shadow_event_' + e.type,\n\t\tshadow_event: {\n\t\t\telementInnerHTML: targetElement.textContent || '',\n\t\t\telementInnerText: targetElement.innerText || '',\n\t\t\ttitle: 'shadow-dom-link',\n\t\t\telement: targetElement,\n\t\t\telementClasses: targetElement.className || '',\n\t\t\telementId: targetElement.id || '',\n\t\t\telementLocation: location || '',\n\t\t\telementTarget: targetElement.target || '',\n\t\t\telementUrl: targetElement.href || targetElement.action || '',\n\t\t\toriginalEvent: e,\n\t\t\tparent: parentDropDown || \"\",\n\t\t\tinShadowDom: true\n\t\t}\n\t});\n}\n"],"names":[],"sourceRoot":""}