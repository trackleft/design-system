{"version":3,"file":"AzButton-stories.c283b61faa67210e64dd.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AACA;AAEA;;;;;;;;;;;;;;ACHA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@az-digital/az-web-components/./components/AzButton/AzButton.js","webpack://@az-digital/az-web-components/./components/AzButton/index.js","webpack://@az-digital/az-web-components/./mixins/delegate-focus-mixin.js","webpack://@az-digital/az-web-components/./mixins/shadow-events-datalayer.js"],"sourcesContent":["import { eventDataLayerPush } from '../../mixins/shadow-events-datalayer';\nimport { LitElement, html } from 'lit-element';\nimport { DelegateFocusMixin } from '../../mixins/delegate-focus-mixin.js';\n\n\nexport class AzButton extends DelegateFocusMixin(LitElement) {\n\tstatic get properties() {\n\t\treturn {\n\t\t\t/**\n\t\t\t * Set to URL to render <a> element styled as button.\n\t\t\t */\n\t\t\tlink: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\ttarget: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\ttoggle: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\tevent: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\telmid: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t}\n\t\t};\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tattributeChangedCallback(name, oldVal, newVal) {\n\t\tsuper.attributeChangedCallback(name, oldVal, newVal);\n\t}\n\n\tchangeAttributes() {\n\t\tthis.setAttribute('closed', 'true');\n\t\tthis.setAttribute('aria-expanded', 'true');\n\t\tthis.requestUpdate();\n\t}\n\n\t_handleClick(e) {\n\t\teventDataLayerPush(e, '');\n\t\tif (this.event) {\n\t\t\tlet event = new Event(this.event);\n\t\t\tdocument.querySelector(this.target).dispatchEvent(event);\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet openAzOffCanvasMenu = new Event('open-az-offcanvas-menu');\n\t\t\tdocument.querySelector(this.target).dispatchEvent(openAzOffCanvasMenu);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t${this.link ?\n\t\t\t\thtml`<a class=\"button\" href=\"${this.link}\" ?disabled=\"${this.disabled}\" @click=\"${eventDataLayerPush}\" id=\"${this.elmid}\">${this.value}<slot></slot></a>`\n\t\t\t\t:\n\t\t\t\thtml`<button type=\"button\" class=\"button\" ?disabled=\"${this.disabled}\" role=\"presentation\" @click=\"${this._handleClick}\" id=\"${this.elmid}\">${this.value}<slot></slot></button>`}\n\t\t`;\n\t}\n\n\tfirstUpdated() {\n\t\tsuper.firstUpdated();\n\t\tthis.setAttribute('role', 'button');\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tget focusElement() {\n\t\treturn this.shadowRoot.querySelector('.button');\n\t}\n}\n","import './style.css';\nimport { AzButton } from './AzButton';\n\ncustomElements.get('az-button') || customElements.define('az-button', AzButton);\n","const $$tabindex = Symbol('tabindex');\nconst $$oldTabindex = Symbol('oldTabindex');\nconst $$newTabindex = Symbol('newTabindex');\n\nexport const DelegateFocusMixin = superClass =>\n  class extends superClass {\n    static get properties() {\n      return {\n        tabIndex: {\n          converter: {\n            fromAttribute: Number,\n            toAttribute: value => (value == null ? null : value.toString())\n          },\n          noAccessor: true,\n          reflect: true\n        },\n\n        /**\n         * If true, the user cannot interact with this element.\n         */\n        disabled: {\n          type: Boolean,\n          reflect: true\n        }\n      };\n    }\n\n    constructor() {\n      super();\n      if (!this.hasAttribute('tabindex')) {\n        this.tabIndex = 0;\n      }\n    }\n\n    get tabIndex() {\n      return this[$$tabindex];\n    }\n\n    set tabIndex(value) {\n      const oldValue = this[$$tabindex];\n      this[$$tabindex] = value;\n      this.requestUpdate('tabIndex', oldValue);\n    }\n\n    firstUpdated() {\n      this.addEventListener('focusin', e => {\n        if (e.composedPath()[0] === this) {\n          this._focus();\n        }\n      });\n\n      this.addEventListener('keydown', e => {\n        if (!e.defaultPrevented && e.shiftKey && e.keyCode === 9) {\n          // Flag is checked in _focus event handler.\n          this._isShiftTabbing = true;\n          HTMLElement.prototype.focus.apply(this);\n          // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n          setTimeout(() => {\n            this._isShiftTabbing = false;\n          }, 0);\n        }\n      });\n    }\n\n    update(props) {\n      if (props.has('disabled')) {\n        this._disabledChanged(this.disabled, props.get('disabled'));\n      }\n\n      if (props.has('tabIndex')) {\n        // save value of tabindex, as it can be overridden to\n        // undefined in case if the element is disabled\n        this[$$newTabindex] = this.tabIndex;\n        this._tabIndexChanged(this.tabIndex);\n      }\n\n      super.update(props);\n    }\n\n    updated(props) {\n      super.updated(props);\n\n      if (props.has('disabled')) {\n        this.focusElement.disabled = this.disabled;\n        if (this.disabled) {\n          this.blur();\n        }\n      }\n\n      if (props.has('tabIndex') && this[$$newTabindex] !== undefined) {\n        this.focusElement.tabIndex = this[$$newTabindex];\n        this[$$newTabindex] = undefined;\n      }\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the actual focusable element in the component.\n     */\n    get focusElement() {\n      window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n      return this;\n    }\n\n    _focus() {\n      if (this._isShiftTabbing) {\n        return;\n      }\n\n      this.focusElement.focus();\n    }\n\n    /**\n     * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n     * @protected\n     */\n    focus() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.focusElement.focus();\n    }\n\n    /**\n     * Native bluring in the host element does nothing because it does not have the focus.\n     * In chrome it works, but not in FF.\n     * @protected\n     */\n    blur() {\n      this.focusElement.blur();\n    }\n\n    _disabledChanged(disabled, oldDisabled) {\n      if (disabled) {\n        this[$$oldTabindex] = this.tabIndex;\n        this.tabIndex = -1;\n        this.setAttribute('aria-disabled', 'true');\n      } else if (oldDisabled) {\n        if (this[$$oldTabindex] !== undefined) {\n          this.tabIndex = this[$$oldTabindex];\n        }\n        this.removeAttribute('aria-disabled');\n      }\n    }\n\n    _tabIndexChanged(tabindex) {\n      if (this.disabled && tabindex) {\n        // If tabindex attribute was changed while checkbox was disabled\n        if (this.tabIndex !== -1) {\n          this[$$oldTabindex] = this.tabIndex;\n        }\n        this.tabIndex = null;\n      }\n    }\n  };\n","export const eventDataLayerPush = (e, location = '') => {\t\n\t// Add window.dataLayer if doesnt exist\n\twindow.dataLayer = window.dataLayer || [];\n\t// Fetch reference to the element that was actually clicked\n\tvar targetElement = e.composedPath()[0];\n\t// Fetch reference to the element's parent dropdown which was clicked\n\tvar parentDropDown = e.composedPath()[3].innerText ? e.composedPath()[3].innerText.split(\"\\n\")[0] : '';\n\t\n\twindow.dataLayer.push({\n\t\tevent: 'shadow_event_' + e.type,\n\t\tshadow_event: {\n\t\t\telementInnerHTML: targetElement.textContent || '',\n\t\t\telementInnerText: targetElement.innerText || '',\n\t\t\ttitle: 'shadow-dom-link',\n\t\t\telement: targetElement,\n\t\t\telementClasses: targetElement.className || '',\n\t\t\telementId: targetElement.id || '',\n\t\t\telementLocation: location || '',\n\t\t\telementTarget: targetElement.target || '',\n\t\t\telementUrl: targetElement.href || targetElement.action || '',\n\t\t\toriginalEvent: e,\n\t\t\tparent: parentDropDown || \"\",\n\t\t\tinShadowDom: true\n\t\t}\n\t});\n}\n"],"names":[],"sourceRoot":""}